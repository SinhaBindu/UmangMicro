@model UmangMicro.Models.ResourceModel
@using UmangMicro.Manager
@{
    ViewBag.Title = "Resource";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string shg = ""; string vo = ""; string clf = "";
}

@using (Html.BeginForm("Resource", "Master", FormMethod.Post, new { @id = "formid", @class = "", role = "form", autocomplete = "off", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ResourceModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <em class="text-danger">*</em> @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <em class="text-danger">*</em> @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Designation, CommonModel.GetResoDesignation(), "Select", new { @class = "form-control", @placeholder = "Designation", @required = "required" })
                @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none;" id="hd-desig">
            <em class="text-danger">*</em>  @Html.LabelFor(model => model.Designation_Other, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Designation_Other, new { htmlAttributes = new { @class = "form-control", @placeholder = "Designation Other" } })
                @Html.ValidationMessageFor(model => model.Designation_Other, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <em class="text-danger">*</em>@Html.LabelFor(model => model.Organisation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Organisation, new { htmlAttributes = new { @class = "form-control", @placeholder = "Organisation", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Organisation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">-->
            @*<em class="text-danger">*</em>*@ @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email ID", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <em class="text-danger">*</em>   @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Contact No", @maxlength = "10", @required = "required" } })
                @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <em class="text-danger">*</em> @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", @placeholder = "Age", @maxlength = "2", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <em class="text-danger">*</em> @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", @placeholder = "State", @required = "required" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <em class="text-danger">*</em>  @Html.LabelFor(model => model.District, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.District, new { htmlAttributes = new { @class = "form-control", @placeholder = "District", @required = "required" } })
                @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
              @Html.LabelFor(model => model.ResourceDownLoad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.EditorFor(model => model.ResourceDownLoad, new { htmlAttributes = new { @class = "form-control", @placeholder = "Resource Download File", @required = "required" } })
                <div class="checkbox" id="RD">
                    <label>
                        <input type="checkbox" name="ResourceDownLoad" id="ResourceDownLoad1" class="chkclass" value="SHG" />SHG Module &nbsp;&nbsp;&nbsp;&nbsp;
                        <input type="checkbox" name="ResourceDownLoad" id="ResourceDownLoad2" class="chkclass" value="VO" />VO Module &nbsp;&nbsp;&nbsp;&nbsp;
                        <input type="checkbox" name="ResourceDownLoad" id="ResourceDownLoad3" class="chkclass" value="CLF" />CLF Module &nbsp;&nbsp;&nbsp;&nbsp;
                    </label>
                </div>
                @Html.ValidationMessageFor(model => model.ResourceDownLoad, "", new { @class = "text-danger" })
                <span class="error" style="display:none; color:#ff0000;">Please select at-least one Resource Module.</span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-info" id="btnSubmit" />
            </div>
        </div>

        @{
            if (ViewBag.RD != null)
            {
                var spl = ViewBag.RD;
                foreach (var item in spl)
                {
                    if (item == "SHG")
                    {
                        <h4><a href="~/ResourceFile/SHG.pdf" download>SHG</a></h4>
                    }
                    else if (item == "VO")
                    {
                        <h4><a href="~/ResourceFile/VO.pdf" download>VO</a></h4>
                    }
                    else if (item == "CLF")
                    {
                        <h4><a href="~/ResourceFile/CLF.pdf" download>CLF</a></h4>
                    }
                }
            }
        }

    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {

            $('#Designation').change(function () {
                $('#Designation_Other').val('');
                if ($(this).val() == "Others") {
                    $('#hd-desig').show();
                    $('#Designation_Other').attr('required', 'required');
                }
                else {
                    $('#hd-desig').hide(); $('#Designation_Other').removeAttr('required');
                }
            });

            //$('.chkclass').click(function () {
            //    var getchkid = $(this).attr('id');
            //    var isChecked = $('#' + getchkid).is(':checked');

            //    if ($('#' + getchkid).is(':checked') == true) {
            //        $('#td' + $(this).val()).css("color", "white");
            //        $('#td' + $(this).val()).css("background-color", "blue");
            //    }
            //    else {
            //        $('#td' + $(this).val()).css("color", "black");
            //        $('#td' + $(this).val()).css("background-color", "white");
            //    }
            //});

            $("#btnSubmit").click(function () {
                var ResourceDownLoad = [];
                $('input:checkbox:checked').each(function () {
                    ResourceDownLoad.push($(this).attr('value'));
                });
                if (ResourceDownLoad == 0) {
                    $('.error').show();
                    return false;
                }
                $('.error').hide();
                return true;
            });

        });


    </script>
}
