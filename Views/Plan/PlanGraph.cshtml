@model UmangMicro.Models.FilterModel
@using UmangMicro.Models;
@using UmangMicro.Manager;
@{
    ViewBag.Title = "Plan";
    ViewBag.TitleIcon = "fa fa-area-chart";
    ViewBag.SemiTitle = "Plan";
    ViewBag.SemiTitleLink = "/Plan/PlanGraph";
}
<style>
    .highcharts-figure,
    .highcharts-data-table table {
        min-width: 100%;
        max-width: 100%;
        margin: 1em auto;
    }

    .highcharts-data-table table {
        font-family: Verdana, sans-serif;
        border-collapse: collapse;
        border: 1px solid #ebebeb;
        margin: 10px auto;
        text-align: center;
        width: 100%;
        max-width: 500px;
    }

    .highcharts-data-table caption {
        padding: 1em 0;
        font-size: 1.2em;
        color: #555;
    }

    .highcharts-data-table th {
        font-weight: 600;
        padding: 0.5em;
    }

    .highcharts-data-table td,
    .highcharts-data-table th,
    .highcharts-data-table caption {
        padding: 0.5em;
    }

    .highcharts-data-table thead tr,
    .highcharts-data-table tr:nth-child(even) {
        background: #f8f8f8;
    }

    .highcharts-data-table tr:hover {
        background: #f1f7ff;
    }

    .highcharts-yaxis .highcharts-axis-line {
        stroke-width: 2px;
    }

    .highcharts-color-0 {
        fill: #7cb5ec;
        stroke: #7cb5ec;
    }

    .highcharts-axis.highcharts-color-0 .highcharts-axis-line {
        stroke: #7cb5ec;
    }

    .highcharts-axis.highcharts-color-0 text {
        fill: #7cb5ec;
    }

    .highcharts-color-1 {
        fill: #90ed7d;
        stroke: #90ed7d;
    }

    .highcharts-axis.highcharts-color-1 .highcharts-axis-line {
        stroke: #90ed7d;
    }

    .highcharts-axis.highcharts-color-1 text {
        fill: #90ed7d;
    }
</style>

<div class="admin-breadcrumb">
    <h3>Plan List</h3>
    <div class="crumb">
        <a href="~/Plan/PlanGraph">Plan Graph</a>
    </div>
</div>

<div class="containers">
    <div class="card">
        <div class="card-body">
            <div id="div-download"></div>
            @using (Html.BeginForm("PlanGraph", "Plan", FormMethod.Post, new { @id = "formid", @class = "loader", autocomplete = "off", enctype = "multipart/form-data" }))
            {
                <div class="row ">

                    <div class="col-md-12">
                        <div class="position-relative form-group">
                            @Html.Partial("_Alerts")
                        </div>
                    </div>
                    <div class="col-md-12 col-md-offset-5">
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">Search  :</legend>
                            <div class="row">

                                <div class="col-md-2">
                                    <div class="position-relative form-group">
                                        <label class="tar-pull-manage2">From Date :  </label>
                                        <div id="demo-dp-range">
                                            @Html.EditorFor(model => model.FD, new { htmlAttributes = new { @class = "form-control datepicker", @placeholder = "From Date" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="position-relative form-group">
                                        <label class="tar-pull-manage2">To Date : </label>
                                        <div id="demo-dp-range">
                                            @Html.EditorFor(model => model.TD, new { htmlAttributes = new { @class = "form-control datepicker", @placeholder = "To Date" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3" id="div-dis">
                                    <div class="position-relative form-group">
                                        <span class="text-danger" id="rqdis" style="display:none;">*</span> @Html.LabelFor(m => m.DistrictId, new { @class = "" })
                                        @Html.DropDownListFor(m => m.DistrictId, CommonModel.GetDistrict(), "Select", new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    @Html.LabelFor(model => model.SchoolId, htmlAttributes: new { @class = "" })
                                    @*@Html.DropDownListFor(m => m.SchoolId, CommonModel.GetSchoolList(), "All", new { @class = "form-control select2" })*@
                                    @Html.DropDownListFor(m => m.SchoolId, new List<SelectListItem>(), null, new { @class = "form-control select2" })
                                    @*@Html.ValidationMessageFor(model => model.SchoolId, "", new { @class = "text-danger" })*@
                                </div>
                                <div class="col-md-1">
                                    <label class="mt-3"></label>
                                    <div class="clearfix"></div>
                                    <input type="submit" id="btnshow" name="btnClick" value="Search" class="btn  btn-primary text-right" title="" />
                                </div>
                                <div class="mark-devide2"></div>
                                <div class="breaker"></div>
                            </div>

                        </fieldset>
                    </div>
                </div>


            }

            <div class="breaker"></div>
            <div class="col-md-12">
                <div class="col-md-12" id="sub-data">
                    <div id="ChartPlan" class="highcharts-figure"></div>

                </div>
            </div>
            @*<div class="panel-body">
            <div class="row">
                <div class="col-sm-12" id="sub-data-view">

                </div>
            </div>
        </div>*@

        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/JS/Master.js"></script>

    <script>
        $(document).ready(function () {
            GetDistrict('DistrictId');

            if ('@CommonModel.GetUserRole()' === '@MvcApplication.CUser.Role') {
                $('#DistrictId').val(('@MvcApplication.CUser.DistrictId').toLowerCase());
                $('#DistrictId').css("pointer-events", "none");
                OnChagDistricts('BlockId', $('#DistrictId').val());
                $('#BlockId').val(('@MvcApplication.CUser.BlockId').toLowerCase());
                $('#BlockId').css("pointer-events", "none");
                GetSchool('SchoolId', '', $('#DistrictId').val(), $('#BlockId').val());
                $('#SchoolId').val(('@MvcApplication.CUser.SchoolId').toLowerCase());
                $('#SchoolId').css("pointer-events", "none");
            }

            if ('@CommonModel.GetUserRoleConsultantDist()' === '@MvcApplication.CUser.Role') {
                $('#DistrictId').val(('@MvcApplication.CUser.DistrictId').toLowerCase());
                $('#DistrictId').css("pointer-events", "none");
                OnChagDistricts('BlockId', $('#DistrictId').val());
            }

            $('#DistrictId').change(function () {
                OnChagDistricts('BlockId', $('#DistrictId').val());
            });

            $('#BlockId').change(function () {
                GetSchool('SchoolId', '', $('#DistrictId').val(), $('#BlockId').val());
            });

            LoadReport();
            $('#formid').submit(function (e) {
                e.preventDefault();
                LoadReport();
            })

        });//end load ready



    function ChartPlan(data) {
        if (data && data.length > 0) {
            var categories = data.map(function (item) { return item.school_name; });
            var NoofData_Modular = data.map(function (item) { return item.NoofData_Modular; });
            var NoofData_Plan = data.map(function (item) { return item.NoofData_Plan; });

            // Render Highcharts chart
            Highcharts.chart('ChartPlan', {
                chart: {
                    type: 'column'
                },
                title: {
                    text: 'School-wise Modular and Plan Data'
                },
                xAxis: {
                    categories: categories,
                    title: {
                        text: 'School Name'
                    }
                },
                yAxis: {
                    title: {
                        text: 'Number of Data'
                    }
                },
                legend: {
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'middle'
                },
                plotOptions: {
                    series: {
                        label: {
                            connectorAllowed: false
                        },
                        pointStart: 1
                    }
                },
                series: [{
                    name: 'NoofData_Modular',
                    data: NoofData_Modular
                }, {
                    name: 'NoofData_Plan',
                    data: NoofData_Plan
                }],
                //responsive: {
                //    rules: [{
                //        condition: {
                //            maxWidth: 500
                //        },
                //        chartOptions: {
                //            legend: {
                //                layout: 'horizontal',
                //                align: 'center',
                //                verticalAlign: 'bottom'
                //            }
                //        }
                //    }]
                //}
            });
        }
        }

          function LoadReport() {
        $('#errormsg').html("");
        $('#global-loader').css('background', 'transparent').css('display', 'block');
        $('#errormsg').removeClass("text-danger");

        $.ajax({
            url: '@Url.Action("PlanGraph", "Plan")',
            type: "POST",
            data: {
                FD: $('#FD').val(),
                TD: $('#TD').val(),
                DistrictId: $('#DistrictId').val(),
                SchoolId: $('#SchoolId').val()
            },
            success: function (resp) {
                $('#global-loader').css('background', 'transparent').css('display', 'none');
                if (resp.IsSuccess) {
                    var chartData = resp.Data;
                    ChartPlan(chartData); // Call function to render chart
                } else {
                    $('#errormsg').html(resp.Data).addClass("text-danger");
                }
            },
            error: function (req, error) {
                var errormsg = 'There was a communication error: ' + error;
                $('#errormsg').html(errormsg).addClass("text-danger");
                $('#global-loader').css('background', 'transparent').css('display', 'none');
            }
        });
    }

    </script>
}