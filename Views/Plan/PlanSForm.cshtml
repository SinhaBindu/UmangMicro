@model UmangMicro.Models.PlanModularModel
@using UmangMicro.Manager
@{
    ViewBag.Title = "Plan";
}

<style>
    .dataTables_filter {
        font-size: large !important;
        font-weight: normal !important;
        /*margin-left: 3% !important;*/
    }

    input[aria-controls="DataList_0"] {
        height: 50px !important;
        width: 690px !important;
    }

    .card {
        padding: 20px !important;
    }

    .form-check-input {
        position: relative !important;
    }

    label {
        display: inline-block;
        max-width: 100%;
        margin-bottom: 5px;
        font-weight: 700;
        font-size: 15px !important;
    }

    .multiselect-container .multiselect-option .form-check, .multiselect-container .multiselect-group .form-check, .multiselect-container .multiselect-all .form-check {
        padding: 0 5px 0 10px !important;
    }

    .form-check-label {
        margin-left: 10px !important;
    }

    .custom-select {
        height: 32px !important
    }

    .multiselect-container {
        height: 200px;
        overflow-y;
        scroll;
        overflow-x: hidden;
    }

        .multiselect-container::-webkit-scrollbar-track {
            -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
            background-color: #F5F5F5;
        }

        .multiselect-container::-webkit-scrollbar {
            width: 10px;
            background-color: #F5F5F5;
        }

        .multiselect-container::-webkit-scrollbar-thumb {
            background-color: #0ae;
            background-image: -webkit-gradient(linear, 0 0, 0 100%, color-stop(.5, rgba(255, 255, 255, .2)), color-stop(.5, transparent), to(transparent));
        }

    .dropdown-item {
        width: 90% !important;
    }

    .btn-group, .btn-group-vertical {
        display: block !important;
    }
</style>

<div class="admin-breadcrumb">
    <h3>Plan Session</h3>
    <div class="crumb">
        <a href="~/Plan/Index">Plan Session List</a> / Add Plan
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="card">

                @using (Html.BeginForm("PlanSForm", "Plan", FormMethod.Post, new { @id = "formid", @class = "", role = "form", autocomplete = "off", enctype = "multipart/form-data", noValidate = "novalidate" }))
                {
                    @Html.HiddenFor(x => x.Id)
                    <div class="form-row col-md-12">
                        <div class="col-md-3">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.TaskType, htmlAttributes: new { @class = "" })<br />
                                @Html.DropDownListFor(model => model.TaskType, CommonModel.GetTaskType(), null, new { @class = "form-control", @required = "required" })
                                @Html.ValidationMessageFor(model => model.TaskType, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.DistrictId, htmlAttributes: new { @class = "" })<br />
                                @Html.DropDownListFor(model => model.DistrictId, new List<SelectListItem>(), null, new { @class = "form-control", @required = "required" })
                                @Html.ValidationMessageFor(model => model.DistrictId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.BlockId, htmlAttributes: new { @class = "" })<br />
                                @Html.DropDownListFor(model => model.BlockId, new List<SelectListItem>(), null, new { @class = "form-control", @required = "required" })
                                @Html.ValidationMessageFor(model => model.BlockId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.SchoolId, htmlAttributes: new { @class = "" })<br />
                                @Html.DropDownListFor(model => model.SchoolId, new List<SelectListItem>(), null, new { @class = "form-control", @required = "required" })
                                @Html.ValidationMessageFor(model => model.SchoolId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3" id="dv_Cohort" style="display:none">
                        <div class="position-relative form-group">
                            <span class="text-danger">*</span>@Html.LabelFor(model => model.Cohort, htmlAttributes: new { @class = "" })<br />
                            @Html.DropDownListFor(model => model.Cohort, CommonModel.GetCohort(true), null, new { @class = "form-control", @required = "required" })
                            @Html.ValidationMessageFor(model => model.Cohort, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-row col-md-12">
                        <div class="col-md-3" id="dv_classmlt" style="display:none">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.ClassMLT, htmlAttributes: new { @class = "" })<br />
                                @Html.DropDownListFor(model => model.ClassMLT, CommonModel.GetClass(true).Where(x => x.Value != "0"), null, new { @class = "form-control display:flex;", @required = "required", @multiple = "multiple" })
                                @Html.ValidationMessageFor(model => model.ClassMLT, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3" id="dv_NoofStudent" style="display:none">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(m => m.NoofStudent, new { @class = "Col-md-2 col-form-label" })<em></em>
                                @Html.EditorFor(m => m.NoofStudent, new { htmlAttributes = new { @placeholder = "Enter the No of Student", @class = "form-control required", @required = "required", @maxlength = "3" } })
                                @Html.ValidationMessageFor(m => m.NoofStudent, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3" id="dv_sessiontype" style="display:none">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.SessionType, htmlAttributes: new { @class = "" })<br />
                                @Html.DropDownListFor(model => model.SessionType, CommonModel.GetSessionType(), null, new { @class = "form-control", @required = "required" })
                                @Html.ValidationMessageFor(model => model.SessionType, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3" id="dv_sessioninput" style="display:none">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(m => m.SessionInput, new { @class = "Col-md-2 col-form-label" })<em></em>
                                @Html.EditorFor(m => m.SessionInput, new { htmlAttributes = new { @placeholder = "Enter the Session Input", @class = "form-control required", @required = "required" } })
                                @Html.ValidationMessageFor(m => m.SessionInput, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-3" id="dv_Careerm" style="display:none">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.CareerMaster, htmlAttributes: new { @class = "" })<br />
                                @Html.DropDownListFor(model => model.CareerMaster, CommonModel.GetCareerMaster(), null, new { @class = "form-control", @required = "required" })
                                @Html.ValidationMessageFor(model => model.CareerMaster, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3" id="dv_coursem" style="display:none">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.coursemaster, htmlAttributes: new { @class = "" })<br />
                                @Html.DropDownListFor(model => model.coursemaster, CommonModel.Getcoursemaster(), null, new { @class = "form-control", @required = "required" })
                                @Html.ValidationMessageFor(model => model.coursemaster, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3" id="dv_sessioninputother" style="display:none">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(m => m.SessionInputother, new { @class = "Col-md-2 col-form-label" })<em></em>
                                @Html.EditorFor(m => m.SessionInputother, new { htmlAttributes = new { @placeholder = "Enter the Session Input", @class = "form-control required", @required = "required" } })
                                @Html.ValidationMessageFor(m => m.SessionInputother, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3" id="dv_cd" style="display:none">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(m => m.ConductedDate, new { @class = "Col-md-2 col-form-label", @id = "AchiDate" })<em></em>
                                @Html.EditorFor(m => m.ConductedDate, new { htmlAttributes = new { @placeholder = "Enter the Date", @class = "form-control datepicker", @required = "required" } })
                                @Html.ValidationMessageFor(m => m.ConductedDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-3" id="dv_file" style="display:none;">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.AchieveImage, htmlAttributes: new { @class = "" })<br />
                                @Html.TextBoxFor(model => model.AchieveImage, new { type = "file", @required = "required", @accept = ".png,.jpg,.jpeg" })
                                @Html.ValidationMessageFor(model => model.AchieveImage, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3" id="dv_ANoofStudent" style="display:none">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(m => m.AchievedNoofStudent, new { @class = "Col-md-2 col-form-label" })<em></em>
                                @Html.EditorFor(m => m.AchievedNoofStudent, new { htmlAttributes = new { @placeholder = "Enter the Achieved No of Student", @class = "form-control required", @required = "required", @maxlength = "3", onkeypress = "validate(event)" } })
                                @Html.ValidationMessageFor(m => m.AchievedNoofStudent, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3" id="dv_ad" style="display:none">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(m => m.AchievementDate, new { @class = "Col-md-2 col-form-label", @id = "AchiDate" })<em></em>
                                @Html.EditorFor(m => m.AchievementDate, new { htmlAttributes = new { @placeholder = "Enter the Date", @class = "form-control datepicker", @required = "required" } })
                                @Html.ValidationMessageFor(m => m.AchievementDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3" id="dv_cr" style="display:none">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.CounsellingRemarks, htmlAttributes: new { @class = "" })<br />
                                @Html.TextAreaFor(model => model.CounsellingRemarks, new { @class = "form-control", @required = "required", @rows = "4", @maxlength = "300" })
                                @Html.ValidationMessageFor(model => model.CounsellingRemarks, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-12" id="divPlanInput">
                        </div>

                        <div class="col-md-12">
                            <br />
                            <div class="position-relative form-group" style="margin-left: 50% !important;">
                                <input type="submit" name="submit" id="submit" value="Submit" class="btn btn-primary" />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                @if (User.Identity.IsAuthenticated)
                                {
                                    <span style="line-height:91px;">
                                        <a href="~/Plan/PlanSForm" class="btn btn-info text-white">Reset</a>
                                    </span>
                                }
                            </div>
                        </div>

                    </div>
                }
            </div>
        </div>

    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/JS/Master.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css">
    <script type="text/javascript" src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.13/js/bootstrap-multiselect.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.13/css/bootstrap-multiselect.css">



    <script type="text/javascript">
        $(document).ready(function () {

            $('#ClassMLT').multiselect({
                includeSelectAllOption: true,
            });

            $('#dv_Cohort').show();
            $('#Cohort').change(function () {
                LoadForm($(this).val());
            });

            $("#AchieveImage").change(function (e) {

                var fileInput = document.getElementById('AchieveImage');
                let allowedExtension = ['image/jpeg', 'image/jpg', 'image/png'];
                //Iterating through each files selected in fileInput
                if (fileInput.files.length > 0) {
                    for (i = 0; i < fileInput.files.length; i++) {
                        if (fileInput.files[i]) {
                            var sfilename = fileInput.files[i].name;
                            // formData.append(sfilename, fileInput.files[i]);
                            var file = fileInput.files[i], img;
                            if (allowedExtension.indexOf(file.type) > -1) {
                                if (Math.round(file.size / (1024 * 1024)) > 1) { // make it in MB so divide by 1024*1024  = 2 MB
                                    toastr.error("Error", 'Please select image size less than 2 MB');
                                    return false;
                                }
                            }
                            else {
                                toastr.error("Error", 'Please select valid image.');
                                $('#AchieveImage').val('');
                                return false;
                            }
                        }
                    }
                }

            });

            $('#TaskType').change(function () {
                $('#dv_Cohort').hide();
                $('#dv_classmlt').hide();
                $('#dv_sessiontype').hide();
                $('#dv_sessioninput').hide();
                $('#dv_sessioninputother').hide();
                $('#dv_Careerm').hide();
                $('#dv_coursem').hide();
                $('#dv_cd').hide();
                $('#dv_NoofStudent').hide();

                $('#Cohort').val("0");
                $('#ClassMLT').val("");
                $('#SessionType').val("0");
                $('#CareerMaster').val('0');
                $('#coursemaster').val('0');
                $('#SessionInput').val('');
                $('#SessionInputother').val('');
                //$('#dv_sessioninputother').val('');
                $('#NoofStudent').val('');

                LoadForm("0");

                if ($(this).val() == "1") {
                    $('#dv_Cohort').show();
                } else if ($(this).val() == "2") {
                    $('#dv_Cohort').hide();
                    $('#dv_classmlt').show();
                    $('#dv_sessiontype').show();
                    $('#dv_cd').show();
                    $('#dv_NoofStudent').show();
                }
            });

            $('#SessionType').change(function () {

                $('#SessionInputother').val('');
                $('#CareerMaster').val('0');
                $('#coursemaster').val('0');
                $('#SessionInput').val('');
                if ($(this).val() == "1") {
                    $('#dv_Careerm').show();

                } else {
                    $('#dv_Careerm').hide();
                }
                if ($(this).val() == "2") {
                    $('#dv_coursem').show();
                } else {
                    $('#dv_coursem').hide();
                }

                if ($(this).val() == "3") {
                    $('#dv_sessioninput').show();
                } else {
                    $('#dv_sessioninput').hide();
                }
            });

            $('#CareerMaster').change(function () {
                $('#SessionInputother').val('');

                if ($(this).val() == "8") {
                    $('#dv_sessioninputother').show();
                    $('#SessionInputother').show();
                } else {
                    $('#dv_sessioninputother').hide();
                    $('#SessionInputother').hide();
                }
            });
            $('#coursemaster').change(function () {
                $('#SessionInputother').val('');
                if ($(this).val() == "279") {
                    $('#dv_sessioninputother').show();
                    $('#SessionInputother').show();
                } else {
                    $('#dv_sessioninputother').hide();
                    $('#SessionInputother').hide();
                }
            });
            GetDistrict('DistrictId');

            if ('@CommonModel.GetUserRole()' === '@MvcApplication.CUser.Role') {
                $('#DistrictId').val(('@MvcApplication.CUser.DistrictId').toLowerCase());
                $('#DistrictId').css("pointer-events", "none");
                OnChagDistricts('BlockId', $('#DistrictId').val());
                $('#BlockId').val(('@MvcApplication.CUser.BlockId').toLowerCase());
                $('#BlockId').css("pointer-events", "none");
                GetSchool('SchoolId', '', $('#DistrictId').val(), $('#BlockId').val());
                $('#SchoolId').val(('@MvcApplication.CUser.SchoolId').toLowerCase());
                $('#SchoolId').css("pointer-events", "none");
            }

            if ('@CommonModel.GetUserRoleConsultantDist()' === '@MvcApplication.CUser.Role') {
                $('#DistrictId').val(('@MvcApplication.CUser.DistrictId').toLowerCase());
                $('#DistrictId').css("pointer-events", "none");
                OnChagDistricts('BlockId', $('#DistrictId').val());
            }

            $('#DistrictId').change(function () {
                OnChagDistricts('BlockId', $('#DistrictId').val());
            });

            $('#BlockId').change(function () {
                GetSchool('SchoolId', '', $('#DistrictId').val(), $('#BlockId').val());
            });
            ///
            if ('@Model.Id' != '0' && '@Model.Id' != '' && '@Model.Id' != undefined && '@Model.TaskType' == '2') {
                $('#AchievedNoofStudent').val('');
                $('#dv_Cohort').hide();
                $('#dv_classmlt').hide();
                $('#dv_sessiontype').hide();
                $('#dv_sessioninput').hide();
                $('#dv_Careerm').hide();
                $('#dv_coursem').hide();
                $('#dv_cd').hide();
                $('#dv_NoofStudent').hide();

                $('#Cohort').val("0");

                $('#CareerMaster').val('0');
                $('#coursemaster').val('0');
                $('#SessionInput').val('');
                $('#SessionInputother').val('');

                LoadForm("0");

                if ($('#TaskType').val() == "1") {
                    $('#dv_Cohort').show();
                }
                else if ($('#TaskType').val() == "2") {
                    $('#dv_Cohort').hide();
                    $('#dv_classmlt').show();
                    $('#dv_sessiontype').show();
                    $('#dv_cd').show();
                    $('#dv_NoofStudent').show();
                }
                //  $('#ConductedDate').val(''); $('#AchieveImage').val('');
                if ($('#TaskType').val() == "2") {
                    //  $('#AchiDate').html('Achievement Date');
                    $('#dv_file').show();
                    $('#dv_cr').show();
                    $('#dv_ANoofStudent').show();
                    $('#dv_ad').show();
                    $('#Id').val('@Model.Id');
                    $('#DistrictId').val('@Model.DistrictId');
                    $('#DistrictId').trigger('change');
                    $('#BlockId').val('@Model.BlockId');
                    $('#BlockId').trigger('change');
                    $('#SchoolId').val('@Model.SchoolId');
                    $('#ConductedDate').val(moment('@Model.ConductedDate').format('d-MMM-yyyy'));
                    $('#NoofStudent').val('@Model.NoofStudent');
                    $('#SessionType').val('@Model.SessionType');
                    $('#SessionType').trigger('change');

                    if ($('#SessionType').val() == "1") {
                        $('#CareerMaster').val('@Model.Session');
                        $('#dv_Careerm').show();
                        $('#coursemaster').val('0');
                        $('#SessionInput').val('');
                        $('#CareerMaster').attr("style", "pointer-events: none;");
                    } else {
                        $('#dv_Careerm').hide();
                    }
                    if ($('#SessionType').val() == "2") {
                        $('#coursemaster').val('@Model.Session');
                        $('#dv_coursem').show();
                        $('#CareerMaster').val('0');
                        $('#SessionInput').val('');
                        $('#coursemaster').attr("style", "pointer-events: none;");
                    } else {
                        $('#dv_coursem').hide();
                    }
                    if ($('#SessionType').val() == "3") {
                        $('#SessionInput').val('@Model.SessionInput');
                        $('#SessionInput').show();
                        $('#dv_sessioninput').show();
                        $('#CareerMaster').val('0');
                        $('#dv_Careerm').hide();
                        $('#dv_coursem').hide();
                        $('#SessionInput').attr("style", "pointer-events: none;");
                    } else {
                        $('#dv_sessioninput').hide();
                    }

                    $('#CareerMaster').change(function () {
                        if ($(this).val() == "8") {
                            $('#dv_sessioninputother').show();
                            $('#SessionInputother').show();
                        } else {
                            $('#dv_sessioninputother').hide();
                            $('#SessionInputother').hide();
                        }
                    });
                    $('#coursemaster').change(function () {
                        if ($(this).val() == "279") {
                            $('#dv_sessioninputother').show();
                            $('#SessionInputother').show();
                        } else {
                            $('#dv_sessioninputother').hide();
                            $('#SessionInputother').hide();
                        }
                    });

                    var checkedclass = ('@Model.ClassMLT').split(',');
                    var checkedcla = ('@Model.ClassMLT');
                    $("#ClassMLT").val(checkedclass)
                    $('#ClassMLT').trigger('change');
                    $("#ClassMLT").multiselect("refresh");

                    $('#DistrictId').attr("style", "pointer-events: none;");
                    $('#BlockId').attr("style", "pointer-events: none;");
                    $('#SchoolId').attr("style", "pointer-events: none;");
                    $('#ConductedDate').attr("style", "pointer-events: none;");
                    $('#NoofStudent').attr("style", "pointer-events: none;");
                    $('#SessionType').attr("style", "pointer-events: none;");
                    $('#ClassMLT').attr("style", "pointer-events: none;");
                    $('#dv_classmlt').attr("style", "pointer-events: none;");
                    $('#TaskType').attr("style", "pointer-events: none;");

                }
                else {
                    $('#dv_file').hide();
                    $('#dv_ANoofStudent').hide();
                    $('#dv_ad').hide();
                    $('#dv_cr').hide();
                }
            }


            $("#formid").on("submit", function (event) {
                event.preventDefault();
                debugger;
                var maxNoofStudentLength = 3;
                var noofStudent = $('#NoofStudent').val();
                var isValid = true;
                if (noofStudent.length > maxNoofStudentLength) {
                    toastr.error("Error", "Number of students should not exceed " + maxNoofStudentLength + " digits.");
                    return false;
                }

                if ($('#DistrictId').val() != '' && $('#BlockId').val() != '' && $('#SchoolId').val() != '') {
                    jQuery.event.trigger("ajaxStart");

                    var formData = new FormData();
                    formData.append('DistrictId', $('#DistrictId').val());
                    formData.append('BlockId', $('#BlockId').val());
                    formData.append('SchoolId', $('#SchoolId').val());
                    formData.append('TaskType', $('#TaskType').val());

                    var MS_model = [];
                    if ($('#TaskType').val() === '0') {
                        toastr.error("Error", 'Please select TaskType');
                        isValid = false;
                        return false;
                    }
                    if ($('#TaskType').val() === '2') {
                        if ($('#SessionType').val() === '0') {
                            toastr.error("Error", 'Please select Session Type');
                            isValid = false;
                            return false;
                        } else if ($('#SessionType').val() === '1' && $('#CareerMaster').val() === '8') {
                            if ($('#SessionInputother').val() === '') {
                                toastr.error("Error", 'Please enter Session Input');
                                isValid = false;
                                return false;
                            }
                        } else if ($('#SessionType').val() === '2' && $('#coursemaster').val() == "279") {
                            if ($('#SessionInputother').val() === '') {
                                toastr.error("Error", 'Please enter Session Input');
                                isValid = false;
                                return false;
                            }
                        }
                    }

                    if ('@Model.Id' != '0' && '@Model.Id' != '' && '@Model.Id' != undefined && '@Model.TaskType'=='2') {
                        formData.append('Id', $('#Id').val());
                        if ($('#AchievedNoofStudent').val() != '') {
                            formData.append('AchievedNoofStudent', $('#AchievedNoofStudent').val());
                        }
                        if ($('#CounsellingRemarks').val() != '') {
                            formData.append('CounsellingRemarks', $('#CounsellingRemarks').val());
                        }
                        if ($('#AchievementDate').val() != '') {
                            formData.append('AchievementDate', $('#AchievementDate').val());
                        }
                        if ($('#AchieveImage').get(0).files.length != 0) {
                            formData.append('AchieveImage', $('#AchieveImage')[0].files[0]);
                        }
                    }

                    //
                    if ($('#TaskType').val() == "1" && $('#Id').val()=='0') {
                        let tbl = $('#tbl_Plan').DataTable();
                        tbl.$('input:checked').each(function (i, row) {
                            var Class_id = $(row).attr('data-id') || 0;
                            var Sessionid = $('#Session' + Class_id).val();
                            var NoofStudent = $('#NoofStudent' + Class_id).val();
                            var CDate = $('#ConductedDate' + Class_id).val();
                            var Ischeck = $(row, 'input[type=checkbox]').val();

                            if (NoofStudent == '' || CDate == '' || (Sessionid == "Select" || Sessionid == "-1" || Sessionid == "")) {
                                toastr.error("Error", "Select Session, Enter the No. of students attended session and Conducted date.");
                                return false;
                            }

                            if (Ischeck) {
                                MS_model.push({
                                    CalssId: Class_id,
                                    Session: Sessionid,

                                    NoofStudent: NoofStudent,
                                    ConductedDate: CDate,
                                    Ischeck: true,
                                });
                            }
                        });

                        if (MS_model.length == 0) {
                            toastr.error("Error", "Please choice at least one Cohort.");
                            return false;
                        }

                        formData.append('MS_model', JSON.stringify(MS_model));
                    }
                    else if ($('#TaskType').val() == "2" && $('#Id').val() == '0') {

                        var cm = $('#ClassMLT').val();
                        if (cm == null || cm == '' || cm == undefined) {
                            toastr.error("Error", "Please Select Class At Least One.");
                            return false;
                        }
                        else {
                            formData.append('ClassMLT', cm);
                        }

                        formData.append('ConductedDate', $('#ConductedDate').val());

                        formData.append('SessionType', $('#SessionType').val());
                        formData.append('NoofStudent', $('#NoofStudent').val());

                        if ($('#SessionInput').val() == '' && $('#SessionType').val() == "3") {
                            toastr.error("Error", "Please Select Others.");
                            return false;
                        }

                        if ($('#CareerMaster').val() != '' && $('#CareerMaster').val() != '0' && $('#SessionType').val() == "1") {
                            formData.append('Session', $('#CareerMaster').val());
                        }
                        else if ($('#coursemaster').val() != '' && $('#coursemaster').val() != '0' && $('#SessionType').val() == "2") {
                            formData.append('Session', $('#coursemaster').val());
                        }
                        else if ($('#SessionInput').val() != '' && $('#SessionType').val() == "3"){
                            formData.append('SessionInput', $('#SessionInput').val());
                        }

                        ////SessionInputother
                        if ($('#SessionType').val() == "1" && $('#CareerMaster').val() != '' && $('#SessionInputother').val() == '' && $('#CareerMaster').val() == "8") {
                            toastr.error("Error", "Please Select Career Others.");
                            return false;
                        }
                        else {
                            if ($('#SessionType').val() == "1" && $('#CareerMaster').val() != '' && $('#SessionInputother').val() != '' && $('#CareerMaster').val() == "8") {
                                formData.append('SessionInputother', $('#SessionInputother').val());
                            }
                        }

                        if ($('#SessionType').val() == "2" && $('#coursemaster').val() == '' && $('#SessionInputother').val() == '' && $('#coursemaster').val() == "279") {
                            toastr.error("Error", "Please Select Course Others.");
                            return false;
                        }
                        else {
                            if ($('#SessionType').val() == "2" && $('#coursemaster').val() != '' && $('#SessionInputother').val() != '' && $('#coursemaster').val() == "279") {
                                formData.append('SessionInputother', $('#SessionInputother').val());
                            }
                        }

                    }
                    $('#submit').prop('disabled', true);

                    $.ajax({
                        type: "POST",
                        url: document.baseURI + "/Plan/PlanSForm/",
                        data: formData,
                        cache: false,
                        contentType: false,
                        processData: false,
                        success: function (resp) {
                            if (resp.StatusType == "success") {
                                toastr.success("Success", resp.Message);
                                jQuery.event.trigger("ajaxStop");
                            } else {
                                toastr.error("Error", resp.Message);
                                $('#submit').prop('disabled', false);
                            }
                        },
                        error: function (req, error) {
                            if (error === 'error') {
                                error = req.statusText;
                            }
                            var errormsg = 'There was a communication error: ' + error;
                            toastr.error("Error", errormsg);
                            jQuery.event.trigger("ajaxStop");
                            $('#submit').prop('disabled', false);
                            return false;
                        }
                    });
                } else {
                    toastr.error('Error', "Please fill all required fields!!");
                }

            });

        });
        function validate(evt) {
            var theEvent = evt || window.event;

            // Handle paste
            if (theEvent.type === 'paste') {
                key = event.clipboardData.getData('text/plain');
            } else {
                // Handle key press
                var key = theEvent.keyCode || theEvent.which;
                key = String.fromCharCode(key);
            }
            var regex = /[0-9]|\./;
            if (!regex.test(key)) {
                theEvent.returnValue = false;
                if (theEvent.preventDefault) theEvent.preventDefault();
            }
        }

        function LoadForm(Cohort) {
            $('#divPlanInput').html("");
            if ($('#TaskType').val() == "0" || $('#TaskType').val() == "2") {
                $('#divPlanInput').hide();
            } else if ($('#TaskType').val() == "1") {
                $('#divPlanInput').show();
            }

            $.ajax({
                url: document.baseURI + "/Plan/PlanLoadForm",
                contentType: "application/html; charset=utf-8",
                type: "GET",
                data: { 'Cohort': Cohort },
                cache: true,
                datatype: "html",
                success: function (t) {
                    $("#divPlanInput").html(t);
                    $('.datepicker').datepicker({
                        format: 'dd-M-yyyy',
                        autoclose: true
                    });
                },
                error: function () {
                    $("#divPlanInput").html("Post Not Found");
                }
            })
        }
    </script>
}
