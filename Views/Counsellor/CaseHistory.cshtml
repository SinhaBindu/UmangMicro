@model UmangMicro.Models.CHModel
@using UmangMicro.Manager
@{
    ViewBag.Title = "Case History";
    Model.StratTime = DateTime.Now;
}

<style>
    .dataTables_filter {
        font-size: large !important;
        font-weight: normal !important;
        /*margin-left: 3% !important;*/
    }

    input[aria-controls="DataList_0"] {
        height: 50px !important;
        width: 690px !important;
    }

    .card {
        padding: 20px !important;
    }
</style>

<div class="admin-breadcrumb">
    <h3>Case History (Student Counselling)</h3>
    <div class="crumb">
        <a href="~/Counsellor/CaseHistoryList">Case History List</a> / Add Case History
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="col-md-12 text-center">
                    <strong> Time Duration :</strong>  <strong class="countdown"></strong>
                </div>
                @using (Html.BeginForm("CaseHistory", "Counsellor", FormMethod.Post, new { @id = "formid", @class = "", role = "form", autocomplete = "off", enctype = "multipart/form-data", noValidate = "novalidate" }))
                {
                    @Html.HiddenFor(m => m.Id)
                    @Html.HiddenFor(m => m.RIASECTest_Id_fk)
                    @Html.HiddenFor(m => m.StratTime)
                    <div class="form-row">

                        <div class="col-md-3">
                            <div class="position-relative form-group">
                                <label>Search By : </label>
                                <div class="checkbox">
                                    @foreach (var item in CommonModel.GetTypeCase())
                                    {
                                        @Html.RadioButtonFor(model => model.TypeCase, item.Value, new { id = "TypeCase" + item.Value, @required = "required" }) @item.Text
                                    }
                                    @Html.ValidationMessageFor(model => model.TypeCase, "", new { @class = "text-danger" })
                                </div>
                                @Html.ValidationMessageFor(model => model.TypeCase, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="position-relative form-group">
                                <label></label>
                                @Html.EditorFor(model => model.Searchtxt, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                &nbsp;&nbsp;&nbsp;&nbsp; @Html.EditorFor(model => model.DOBtxt, new { htmlAttributes = new { @class = "form-control datepicker", @placeholder = "DOB", @style = "display:none;" } })
                                @Html.ValidationMessageFor(model => model.Searchtxt, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="position-relative form-group mt-sm-4">
                                <a href="javascript:void(0);" onclick="return GetStudData('CaseID')" class="btn btn-info text-white">Search</a>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.CaseID, htmlAttributes: new { @class = "" })<br />
                                @Html.DropDownListFor(model => model.CaseID, new List<SelectListItem>(), null, new { @class = "form-control select2", @required = "required" })
                                @Html.ValidationMessageFor(model => model.CaseID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.DOC, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.DOC, new { htmlAttributes = new { @class = "form-control datepicker", @required = "required", @maxlength = "11", @placeholder = "dd-mmm-yyyy" } })
                                @Html.ValidationMessageFor(model => model.DOC, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.ClassId, htmlAttributes: new { @class = "" })
                                @Html.DropDownListFor(model => model.ClassId, CommonModel.GetClass(), null, new { @class = "form-control", @required = "required" })
                                @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12" id="div-stud" style="display:none;">
                            <div class="position-relative form-group">
                                <span>Student Name : <strong id="lsn"></strong></span>
                                <span>DOB : <strong id="ldob"></strong></span>
                                <span>Registration Date : <strong id="lregdt"></strong></span>
                                <span>School Name : <strong id="lsch"></strong></span>
                                <span id="sg-ch" style="display:none;">
                                    No Of Case History :
                                    <strong id="Noofch">
                                        <a href="#" id="NoofchLink"></a>
                                    </strong>
                                </span>
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.TypeCounsellor, htmlAttributes: new { @class = "" })
                                @Html.DropDownListFor(model => model.TypeCounsellor, CommonModel.GetTypeCounsellor(), null, new { @class = "form-control", @required = "required" })
                                @Html.ValidationMessageFor(model => model.TypeCounsellor, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.TypeQuery, htmlAttributes: new { @class = "" })
                                @Html.DropDownListFor(model => model.TypeQuery, CommonModel.GetTypeQuery(), null, new { @id = "TypeQuery", @class = "form-control", @required = "required" })
                                @Html.ValidationMessageFor(model => model.TypeQuery, "", new { @class = "text-danger" })
                                <br />
                                <a id="linkrctest" style="display:none;">Click to Psychometric (RIASEC) Test</a>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "" })<br />
                                @Html.DropDownListFor(model => model.Subject, CommonModel.GetSubject(), null, new { @class = "form-control", @multiple = "multiple", @required = "required" })
                                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.KeyWords, htmlAttributes: new { @class = "" })
                                @Html.TextAreaFor(model => model.KeyWords, new { @class = "form-control", @required = "required", @rows = "4", @col = "12" })
                                @Html.ValidationMessageFor(model => model.KeyWords, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6" id="hd-tenth" style="display:none;">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.Study10th, htmlAttributes: new { @class = "" })
                                @Html.DropDownListFor(model => model.Study10th, CommonModel.GetInterested(), null, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Study10th, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6" id="hd-twelfth" style="display:none;">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.Study12th, htmlAttributes: new { @class = "" })
                                @Html.DropDownListFor(model => model.Study12th, CommonModel.GetInterested(), null, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Study12th, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div id="hd-Test" style="display:none;">*@
                        <div class="col-md-6 hd-Test" style="display:none;">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.Counselling, htmlAttributes: new { @class = "" })
                                @Html.DropDownListFor(model => model.Counselling, CommonModel.GetCounselling(), null, new { @class = "form-control", @multiple = "multiple" })
                                @Html.ValidationMessageFor(model => model.Counselling, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6 hd-Test" style="display:none;">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.IsPsychometric, htmlAttributes: new { @class = "" })
                                @*@Html.DropDownListFor(model => model.IsPsychometric, CommonModel.GetYesNo(), null, new { @class = "form-control" })*@
                                <div class="checkbox">
                                    @foreach (var item in CommonModel.GetYesNo())
                                    {
                                        @Html.RadioButtonFor(model => model.IsPsychometric, item.Value, new { id = "IsPsychometric" + item.Value, @required = "required" }) @item.Text
                                    }
                                    @Html.ValidationMessageFor(model => model.IsPsychometric, "", new { @class = "text-danger" })
                                </div>
                                @Html.ValidationMessageFor(model => model.IsPsychometric, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6 hd-Test" id="div-psy" style="display:none">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.Psychometric, htmlAttributes: new { @class = "" })
                                @Html.DropDownListFor(model => model.Psychometric, CommonModel.GetPsychometric(), null, new { @class = "form-control", @multiple = "multiple" })
                                @Html.ValidationMessageFor(model => model.Psychometric, "", new { @class = "text-danger" })
                                <br />Result of Psychometric test :<strong id="lblPsyResultMax3"></strong>
                            </div>
                        </div>
                        @*</div>*@
                        <div class="col-md-12" id="div-TestRes" style="display:none">
                            <p>
                                <a class="btn btn-primary" data-toggle="collapse" href="#collapseExample" role="button" aria-expanded="false" aria-controls="collapseExample">
                                    Psychometric test details
                                </a>
                            </p>
                            <div class="collapse" id="collapseExample">
                                <div class="card card-body">
                                    <strong>
                                        Result of Psychometric test
                                        <input type="checkbox" name="chkAllRC" id="chkAllRC" value="" style="display:none;" /> All RIASEC List
                                    </strong>
                                    @*style="height:200px !important; overflow:scroll;"*@
                                    <div id="RToCResData"></div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-12" id="div-comde" style="display:none">
                            <p>
                                <a class="btn btn-primary" id="btnCD" style="display:none;" data-toggle="collapse" href="#collaps_CD" role="button" aria-expanded="false" aria-controls="collaps_CD">
                                    Courses Details
                                </a>
                                <a class="btn btn-primary" id="btnST" style="display:none;" data-toggle="collapse" href="#collaps_ST" role="button" aria-expanded="false" aria-controls="collaps_ST">
                                    Skill Training
                                </a>
                                <a class="btn btn-primary" id="btnSSP" style="display:none;" data-toggle="collapse" href="#collaps_SSP" role="button" aria-expanded="false" aria-controls="collaps_SSP">
                                    Scholarships
                                </a>
                                <a class="btn btn-primary" id="btnSHE" style="display:none;" data-toggle="collapse" href="#collaps_SHE" role="button" aria-expanded="false" aria-controls="collaps_SHE">
                                    Schemes
                                </a>
                            </p>

                            <div class="collapse" id="collaps_CD">

                                <div class="col-md-12" id="dv-scd" style="display:none;">
                                    <div class="col-md-6">
                                        <a href="javascript:void(0);" class="btn btn-info text-white btnscdst " id="btnscd" name="btnscd">Search</a>
                                    </div>
                                </div>
                                <div class="col-md-12" style="display:none;" id="dv-checdkall">
                                    <input type="checkbox" class="" name="chckcd" id="chkcdAll" value="1" />All &nbsp;
                                    <input type="checkbox" class="" name="chckcd" id="chkcn" value="2" />Course Name &nbsp;
                                    <div style="display:none">

                                        <input type="checkbox" class="" name="chckcd" id="chkct" value="3" />Course Type &nbsp;
                                        <input type="checkbox" class="" name="chckcd" id="chkjo" value="4" />Job Opportunity &nbsp;
                                        <input type="checkbox" class="" name="chckcd" id="chkcd" value="5" />Course Duration &nbsp;
                                        <input type="checkbox" class="" name="chckcd" id="chke" value="6" />Eligibility &nbsp;
                                        <input type="checkbox" class="" name="chckcd" id="chkmi" value="7" />Medium Instruction &nbsp;
                                        <input type="checkbox" class="" name="chckcd" id="chkcu" value="8" />Institute &nbsp;
                                        <input type="checkbox" class="" name="chckcd" id="chklc" value="9" />Location
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-6" id="dv-cn" style="display:none;">
                                        <div class="position-relative form-group">
                                            <label>Course Name</label>
                                            <textarea type="text" name="sby_cn" id="sby_cn" size="50" autocomplete="" rows="1" cols="50"></textarea>
                                        </div>
                                    </div>
                                    <div class="col-sm-6" id="dv-ct" style="display:none;">
                                        <div class="position-relative form-group">
                                            <label>Course Type</label>
                                            <textarea type="text" name="sby_ct" id="sby_ct" autocomplete="" rows="1" cols="50"></textarea>
                                        </div>
                                    </div>
                                    <div class="col-sm-6" id="dv-jo" style="display:none;">
                                        <div class="position-relative form-group">
                                            <label>Job Opportunity</label>
                                            <textarea type="text" name="sby_jo" id="sby_jo" autocomplete="" rows="1" cols="50"></textarea>
                                        </div>
                                    </div>
                                    <div class="col-sm-6" id="dv-cd" style="display:none;">
                                        <div class="position-relative form-group">
                                            <label>Course Duration</label>
                                            <textarea type="text" name="sby_cd" id="sby_cd" autocomplete="" rows="1" cols="50"></textarea>
                                        </div>
                                    </div>
                                    <div class="col-sm-6" id="dv-e" style="display:none;">
                                        <div class="position-relative form-group">
                                            <label>Eligibility</label>
                                            <textarea type="text" name="sby_e" id="sby_e" autocomplete="" rows="1" cols="50"></textarea>
                                        </div>
                                    </div>
                                    <div class="col-sm-6" id="dv-mi" style="display:none;">
                                        <div class="position-relative form-group">
                                            <label>Medium Instruction</label>
                                            <textarea type="text" name="sby_mi" id="sby_mi" autocomplete="" rows="1" cols="50"></textarea>
                                        </div>
                                    </div>
                                    <div class="col-sm-6" id="dv-cu" style="display:none;">
                                        <div class="position-relative form-group">
                                            <label>Institute</label>
                                            <textarea type="text" name="sby_cu" id="sby_cu" autocomplete="" rows="1" cols="50"></textarea>
                                        </div>
                                    </div>
                                    <div class="col-sm-6" id="dv-lc" style="display:none;">
                                        <div class="position-relative form-group">
                                            <label>Location</label>
                                            <textarea type="text" name="sby_lc" id="sby_lc" autocomplete="" rows="1" cols="50"></textarea>
                                        </div>
                                    </div>
                                </div>
                                <p class="mb-0">
                                    <div id="sub-data" class="col-md-12"></div>
                                </p>

                            </div>

                            <div class="collapse" id="collaps_ST">

                                <div class="col-md-12" id="dv-st" style="display:none;">
                                    <div class="col-md-6">
                                        <a href="javascript:void(0);" class="btn btn-info text-white btnscdst" id="btnsst" name="btnsst">Search</a>
                                    </div>
                                </div>
                                <p class="mb-0">
                                    <div id="sub-data1" class="col-md-12"></div>
                                </p>

                            </div>
                            <div class="collapse" id="collaps_SSP">

                                <div class="col-md-12" id="dv-ssp" style="display:none;">
                                    @*<div class="col-md-6">
                                            <a href="javascript:void(0);" class="btn btn-info text-white" id="btnsssp" name="btnsssp">Search</a>
                                        </div>*@
                                </div>
                                <p class="mb-0">
                                    <div id="sub-data2" class="col-md-12"></div>
                                </p>

                            </div>
                            <div class="collapse" id="collaps_SHE">

                                <div class="col-md-12" id="dv-sm" style="display:none;">
                                    @*<div class="col-md-6">
                                            <a href="javascript:void(0);" class="btn btn-info text-white" id="btnssm" name="btnssm">Search</a>
                                        </div>*@
                                </div>
                                <p class="mb-0">
                                    <div id="sub-data3" class="col-md-12"></div>
                                </p>

                            </div>

                        </div>

                        <div class="col-md-12">
                            @Html.LabelFor(model => model.AreasImprovement, htmlAttributes: new { @class = "" })
                            @Html.TextAreaFor(model => model.AreasImprovement, new { @class = "form-control", @required = "required", @rows = "4", @col = "12" })
                            @Html.ValidationMessageFor(model => model.AreasImprovement, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.Recommendation, htmlAttributes: new { @class = "" })
                            @Html.TextAreaFor(model => model.Recommendation, new { @class = "form-control", @required = "required", @rows = "4", @col = "12" })
                            @Html.ValidationMessageFor(model => model.Recommendation, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.IsFollow, htmlAttributes: new { @class = "" })
                                @*@Html.DropDownListFor(model => model.IsFollow, CommonModel.GetYesNo(), null, new { @class = "form-control" })*@
                                @*@Html.ValidationMessageFor(model => model.IsFollow, "", new { @class = "text-danger" })*@

                                @*@Html.LabelFor(model => model.IsFollow, htmlAttributes: new { @class = "" })*@
                                <div class="checkbox">
                                    @foreach (var item in CommonModel.GetYesNo())
                                    {
                                        @Html.RadioButtonFor(model => model.IsFollow, item.Value, new { id = "IsFollow" + item.Value, @required = "required" }) @item.Text
                                    }
                                    @Html.ValidationMessageFor(model => model.IsFollow, "", new { @class = "text-danger" })
                                </div>
                                @Html.ValidationMessageFor(model => model.IsFollow, "", new { @class = "text-danger" })

                            </div>
                        </div>

                        <div class="col-md-3 hd-MY" style="display:none;">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.FM, htmlAttributes: new { @class = "" })
                                @Html.DropDownListFor(model => model.FM, CommonModel.GetMonth(), null, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.FM, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3 hd-MY" style="display:none;">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.FY, htmlAttributes: new { @class = "" })
                                @Html.DropDownListFor(model => model.FY, CommonModel.GetYear(), null, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.FY, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="position-relative form-group">
                                <span class="text-danger">*</span>@Html.LabelFor(model => model.IsGoalClear, htmlAttributes: new { @class = "" })
                                @*@Html.DropDownListFor(model => model.IsGoalClear, CommonModel.GetYesNo(), null, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.IsGoalClear, "", new { @class = "text-danger" })*@
                                @*@Html.LabelFor(model => model.IsGoalClear, htmlAttributes: new { @class = "" })*@
                                <div class="checkbox">
                                    @foreach (var item in CommonModel.GetYesNo())
                                    {
                                        @Html.RadioButtonFor(model => model.IsGoalClear, item.Value, new { id = "IsGoalClear" + item.Value, @required = "required" }) @item.Text
                                    }
                                    @Html.ValidationMessageFor(model => model.IsGoalClear, "", new { @class = "text-danger" })
                                </div>
                                @Html.ValidationMessageFor(model => model.IsGoalClear, "", new { @class = "text-danger" })

                            </div>
                        </div>

                        @*<div class="col-md-12">
                                <div class="position-relative form-group" style="margin-left: 50% !important;">
                                    <input type="submit" name="submit" id="submit" value="Submit" class="btn btn-primary" />
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    @if (User.Identity.IsAuthenticated)
                                    {
                                        <a href="~/Counsellor/CaseHistory" class="btn btn-info text-white">Reset</a>
                                    }
                                </div>
                            </div>*@
                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="position-relative form-group" style="margin-left: 50% !important;">
                                    <input type="submit" name="submit" id="submit" value="Submit" class="btn btn-primary" />
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    @if (User.Identity.IsAuthenticated)
                                    {
                                        <span style="line-height: 91px;">
                                            <a href="~/Counsellor/CaseHistory" class="btn btn-info text-white">Reset</a>
                                        </span>
                                    }
                                </div>
                            </div>
                        </div>



                    </div>

                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/JS/Master.js"></script>

    <link rel="stylesheet" href="https://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
    <script src="https://code.jquery.com/jquery-1.9.1.js"></script>
    <script src="https://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>

    <script type="text/javascript">
        var StudDList = []; RIASECl3Val = []; RIASEC_ID_Pk = [];
        var RCSList = [];
        $(document).ready(function () {

            $("#linkrctest").attr("href", "");
            $("#linkrctest").css("display", 'none');
            if ('@Model.TypeCase' === '2' && '@Model.CaseID' === $('input[name=Searchtxt]').val()) {
                GetStudData('CaseID');
            }

            loopRC();

            CountTime();

            function updateDisplay() {
                //Formated Display
                phrs = hrs < 10 ? '0' + hrs : hrs;
                pmin = min < 10 ? '0' + min : min;
                psec = sec < 10 ? '0' + sec : sec;
                pms = ms < 10 ? '0' + ms : ms;
                //Output
                document.querySelector('.hrs').innerText = phrs;
                document.querySelector('.min').innerText = pmin;
                document.querySelector('.sec').innerText = psec;
                document.querySelector('.ms').innerText = pms;
            }

            $('input[name=TypeCase]').click(function () {
                if ($(this).val() == "1") {
                    $('#DOBtxt').show();
                    $('#DOBtxt').attr('required', 'required');
                }
                else {
                    $('#DOBtxt').hide();  $('#DOB').val('');
                    $('#DOBtxt').removeAttr('required');
                }
            });

            if ('@CommonModel.GetUserRole()' === '@MvcApplication.CUser.Role') {
                $('#TypeCounsellor').val(('@MvcApplication.CUser.RoleId').toLowerCase());
                $('#TypeCounsellor').attr("style", "pointer-events: none;");
            }

            $('.btnscdst').on('click', function () {
                BindData(1, "");
            })

            $('#btnsssp').on('click', function () {
                 BindData(3, "all");
            })
            $('#btnssm').on('click', function () {
                BindData(4, "all");
            })

            $('select[name=Subject]').multiselect({
                columns: 2,
                includeSelectAllOption: true
            });
            $('select[name=Counselling]').multiselect({
                includeSelectAllOption: true,
                columns: 2,
            });
            $('select[name=Psychometric]').multiselect({
                includeSelectAllOption: true,
                columns: 2,
                //afterSelect: function () {
                //    var selections = [];
                //    $("select[name=Psychometric] option:selected").each(function () {
                //        var optionValue = $(this).val();
                //        var optionText = $(this).text();

                //        selections.push(optionValue);
                //    });

                    // use array "selections" here..
               // }

            });

            $('input[name=IsFollow]').click(function () {
                $('#FM').val('-1'); $('#FY').val('-1');
                if ($(this).val() == "1") {
                    $('.hd-MY').show();
                    $('#FM').attr('required', 'required'); $('#FY').attr('required', 'required');
                }
                else {
                    $('.hd-MY').hide();
                    $('#FM').removeAttr('required'); $('#FY').removeAttr('required');
                }
            });

            $('select[name=TypeQuery]').change(function () {
                var urllink =  document.baseURI + '/Test/Add?Para=2&&CaseID=' + $('#CaseID').val();
                $("#linkrctest").attr("href", "");
                $("#linkrctest").css("display", 'none');
                $('#li-tab0').hide(); $('#li-tab1').hide(); $('#li-tab2').hide(); $('#li-tab3').hide();
                $('#sub-data').hide(); $('#sub-data2').hide(); $('#sub-data3').hide();
               // BindData();
                $('.hd-Test').hide();
                $('#div-comde').show();
                $('#btnCD').hide();
                $('#btnST').hide();
                $('#btnSSP').hide();
                $('#btnSHE').hide(); $('#dv-checdkall').hide();

                if ($(this).val() == "1" || $(this).val() == "2") {
                    $("#linkrctest").attr("href", urllink);
                    $("#linkrctest").css("display", 'block');
                    $('.hd-Test').show();
                    $('#li-tab0').show();
                    $('#li-tab1').show();
                    $('#sub-data').show();
                    $('#btnCD').show();
                    $('#btnST').show();
                    GetRIASEClData(); GetSearchCD(); $('#dv-checdkall').show();
                  //  $('#sby_cn').autocompleteDropdown();
                }
                else if ($(this).val() == "3") {
                    $('#li-tab2').show();
                    $('#sub-data2').show(); $('#btnSSP').show();
                    BindData(3, "all");
                }
                else if ($(this).val() == "4") {
                    $('#li-tab3').show(); $('#btnSHE').show();
                    $('#sub-data3').show(); BindData(4, "all");
                }
                else {
                    $('.hd-Test').hide();
                }
            });


            $('select[name=CaseID]').change(function () {
                $("#linkrctest").attr("href", "");
                $("#linkrctest").css("display", 'none');
                $('#div-stud').hide();
                BindStudentDetailClear();
                var fd = StudDList.filter(x => x.CaseID == $('#CaseID').val());
                if (fd.length > 0) {
                    CaseHistoryCount("", fd[0].CaseID);
                    $('#div-stud').show();
                    $('#lsn').html(fd[0].Name);
                    $('#ldob').html(moment(fd[0].DOB).format("DD-MMM-YYYY"));
                    $('#lregdt').html(moment(fd[0].RegDate).format("DD-MMM-YYYY"));
                    $('#lsch').html(fd[0].school_name);
                    $('#ClassId').val(fd[0].ClassId);
                    if (fd[0].ClassId == "10") {
                        $('#hd-tenth').show();
                        $('#hd-twelfth').hide();
                    }
                    else if (fd[0].ClassId == "11" || fd[0].ClassId == "12") {
                        $('#hd-tenth').hide();
                        $('#hd-twelfth').show();
                    }
                    else {
                        $('#hd-tenth').hide();
                        $('#hd-twelfth').hide();
                    }
                }
            });

            $('select[name=ClassId]').change(function () {
                if ($(this).val() == "10") {
                    $('#hd-tenth').show();
                    $('#hd-twelfth').hide();
                }
                else if ($(this).val() == "11" || $(this).val() == "12") {
                    $('#hd-tenth').hide();
                    $('#hd-twelfth').show();
                }
                else {
                    $('#hd-tenth').hide();
                    $('#hd-twelfth').hide();
                }
            });

            $('input[name=IsPsychometric]').click(function () {
                if ($(this).val() == "1") {
                    //if ($('select[name=Counselling]').val() == "2") {
                        $('#div-TestRes').show();
                        $('#div-psy').show();
                        RToCData();//Tools used for counselling
                        //for (var i = 0; i < RCSList.length; i++) {
                        //    var st = RIASECl3Val.join(",");
                        //}
                        var sjoin = ((RIASECl3Val.join(",")).split(','));
                            $('select[name=Psychometric]').val(sjoin).multiselect('refresh');

                    //}
                    //else {
                    //    $('input[name="IsPsychometric"]').removeAttr("checked");
                    //   // toastr.error("Error", "Please select - Tools used for counselling (Pscholmetric (RIASEC) test)");
                    //}
                }
                else {
                    //if ($('select[name=Counselling]').val() == "2") {
                    //    $('input[name="IsPsychometric"]').removeAttr("checked");
                    //    $('input[id="IsPsychometric1"]').attr("checked", true);
                    //}
                    $('#div-TestRes').hide();
                    $('#div-psy').hide();
                }
            });

            $("#chkAllRC").on("click", function () {
                if ($("#chkAllRC").prop("checked")) {
                    RToCData(true);
                    HideSearchCD();
                }
                else
                    RToCData(false);
            });

            $('input[name="chckcd"]').on("click", function () {
                debugger;
                $('input[name="chckcd"]:checked').each(function (i,exp) {
                    debugger; $('#btnscd').show();
                    HideSearchCD();
                    //all
                    if (exp.value == "1") {
                        if ($(this).prop("checked")) {
                            $('input[name="chckcd"]').removeAttr('checked', false);
                            $("#chkcdAll").prop('checked', true);
                            $('#btnscd').hide();
                            BindData(1, "all");
                        }
                        else {
                            $('#chkcdAll').removeAttr('checked', false);
                            $('#sub-data').html('');
                            $('#btnscd').show();
                        }
                    }

                    if (exp.value == "2")
                        if ($(this).prop("checked"))
                            $("#dv-cn").show();
                        else
                            $("#dv-cn").hide();

                    if (exp.value == "3")
                        if ($(this).prop("checked"))
                            $("#dv-ct").show();
                        else
                            $("#dv-ct").hide();
                    if (exp.value == "4")
                        if ($(this).prop("checked"))
                            $("#dv-jo").show();
                        else
                            $("#dv-jo").hide();
                    if (exp.value == "5")
                        if ($(this).prop("checked"))
                            $("#dv-cd").show();
                        else
                            $("#dv-cd").hide();
                    if (exp.value == "6")
                        if ($(this).prop("checked"))
                            $("#dv-e").show();
                        else
                            $("#dv-e").hide();
                    if (exp.value == "7")
                        if ($(this).prop("checked"))
                            $("#dv-mi").show();
                        else
                            $("#dv-mi").hide();
                    if (exp.value == "8")
                        if ($(this).prop("checked"))
                            $("#dv-cu").show();
                        else
                            $("#dv-cu").hide();
                    if (exp.value == "9")
                        if ($(this).prop("checked"))
                            $("#dv-lc").show();
                        else
                            $("#dv-lc").hide();
                });
            });

            /* Start Submitted Data */
            $("#formid").on("submit", function (event) {
                event.preventDefault();

                if ($('#CaseID').val() != '' && $('#DOC').val() != '' && $('#ClassId').val() != ''
                    && $('#TypeCounsellor').val() != '' && $('#TypeQuery').val() != '' && $('#Subject').val() != ''
                    && $('#KeyWords').val() != '' && $('#AreasImprovement').val() != '' && $('#Recommendation').val() != ''
                ) {

                //    var bResponse = confirm('Are you sure you want to submit?');
                  //  if (bResponse === true) {
                        jQuery.event.trigger("ajaxStart");
                        debugger;


                        var isvalid = Inputisvalid();//("#formid").valid();
                        if (isvalid) {
                            var phyjoin = "";
                            if ($('input[name=IsPsychometric]:checked').val()=="1") {
                                //phyjoin = ($('#Psychometric').val()).join(',');
                                phyjoin = $('#Psychometric').val();
                                if (phyjoin != null && phyjoin != undefined) {
                                    if (phyjoin.length != 0) {
                                        phyjoin = phyjoin.join(',');
                                    }
                                }
                            }
                            var Counsellingjoin = $('#Counselling').val();
                            if (Counsellingjoin != null && Counsellingjoin != undefined) {
                                if (Counsellingjoin.length != 0) {
                                    Counsellingjoin = Counsellingjoin.join(',');
                                }
                            }
                            var Subjectjoin = $('#Subject').val();
                            if (Subjectjoin != null && Subjectjoin != undefined) {
                                if (Subjectjoin.length != 0) {
                                    Subjectjoin = Subjectjoin.join(',');
                                }
                            }
                           // var Counsellingjoin = ($('#Counselling').val()).join(',');
                            //var Subjectjoin = ($('#Subject').val()).join(',');
                            var formData = new FormData();
                            formData.append('StratTime', $('#StratTime').val());
                            formData.append('CaseID', $('#CaseID').val());
                            formData.append('RIASECTest_Id_fk', $('#RIASECTest_Id_fk').val());
                            formData.append('DOC', $('#DOC').val());
                            formData.append('ClassId', $('#ClassId').val());
                            formData.append('TypeCounsellor', $('#TypeCounsellor').val());
                            formData.append('TypeQuery', $('#TypeQuery').val());
                            formData.append('Study10th', $('#Study10th').val());
                            formData.append('Study11th', $('#Study11th').val());
                            formData.append('Subject', Subjectjoin);
                            formData.append('KeyWords', $('#KeyWords').val());
                            formData.append('Counselling', Counsellingjoin);
                            formData.append('IsPsychometric', $('input[name=IsPsychometric]:checked').val());
                            if ($('input[name=IsPsychometric]:checked').val() == "1") {
                                formData.append('Psychometric', phyjoin);
                            }
                            else {
                                formData.append('Psychometric', '');
                            }
                            formData.append('AreasImprovement', $('#AreasImprovement').val());
                            formData.append('Recommendation', $('#Recommendation').val());
                            formData.append('IsFollow', $('input[name=IsFollow]:checked').val());
                            if ($('input[name=IsFollow]:checked').val() == "1") {
                                formData.append('FM', $('select[name=FM]').val());
                                formData.append('FY', $('select[name=FY]').val());
                            }
                            else {
                                formData.append('FM', ''); formData.append('FY', '');
                            }
                            formData.append('IsGoalClear', $('input[name=IsGoalClear]:checked').val());

                            debugger;
                            var CH_PHY_List = [], CH_CD_List = [], CH_SkillT_List = [],
                                CH_SSP_List = [], CH_SM_List = [];
                            let tablephy = $('#DataListRC').DataTable();
                            tablephy.$('input:checked').each(function (i, row) {
                                var CH_id = $(row).attr('data-id') || 0;
                                var data_ChPhyId = $(row).attr('data-ChPhyId') || 0;
                                var PsyTestSname = $(row).attr('data-name') || '';
                                var RIASECid = $(row, 'input[type=checkbox]').val();
                                CH_PHY_List.push({
                                    ID: data_ChPhyId,
                                    CaseId: $('#CaseID').val(),
                                    RIASEC_Guided_Id: RIASECid,
                                    CaseHistoryId: $('#Id').val(),
                                    PsychometricTestId: PsyTestSname,
                                });
                            });
                            if ($('input[name=IsPsychometric]:checked').val() == "1" && CH_PHY_List.length==0) {
                                toastr.error("Error", "Please choice at least one RIASEC Guided Subject list.");
                                return false;
                            }


                            let table1 = $('#DataListCD').DataTable();
                            table1.$('input:checked').each(function (i, row) {
                                var id = $(row).attr('data-id') || 0;
                                var CourDId = $(row, 'input[type=checkbox]').val();
                                CH_CD_List.push({
                                    ID: parseInt(id),
                                    CaseId: $('#CaseID').val(),
                                    CourseD_Id: CourDId,
                                    CaseHistoryId: $('#Id').val(),
                                });
                            });
                            let table2 = $('#DataListST').DataTable();
                            table2.$('input:checked').each(function (i, row) {
                                var id = $(row).attr('data-id') || 0;
                                var SkillT_Id = $(row, 'input[type=checkbox]').val();
                                CH_SkillT_List.push({
                                    ID: parseInt(id),
                                    CaseId: $('#CaseID').val(),
                                    SkillT_Id: SkillT_Id,
                                    CaseHistoryId: $('#Id').val(),
                                });
                            });
                            let table3 = $('#DataListSSP').DataTable();
                            table3.$('input:checked').each(function (i, row) {
                                var id = $(row).attr('data-id') || 0;
                                var Scholarship_Id = $(row, 'input[type=checkbox]').val();
                                CH_SSP_List.push({
                                    ID: parseInt(id),
                                    CaseId: $('#CaseID').val(),
                                    Scholarship_Id: Scholarship_Id,
                                    CaseHistoryId: $('#Id').val(),
                                });
                            });
                            let table4 = $('#DataListSCME').DataTable();
                            table4.$('input:checked').each(function (i, row) {
                                var id = $(row).attr('data-id') || 0;
                                var Scheme_Id = $(row, 'input[type=checkbox]').val();
                                CH_SM_List.push({
                                    ID: parseInt(id),
                                    CaseId: $('#CaseID').val(),
                                    Scheme_Id: Scheme_Id,
                                    CaseHistoryId: $('#Id').val(),
                                });
                            });

                            debugger;
                            if ($('input[name=IsPsychometric]:checked').val() == "1")
                            { formData.append('CH_PHY_model', JSON.stringify(CH_PHY_List)); }
                            else { formData.append('CH_PHY_model', JSON.stringify(CH_PHY_List = [])); }
                            if (CH_CD_List.length == 0 && CH_SkillT_List == 0 && CH_SSP_List == 0 && CH_SM_List.length==0) {
                                toastr.error("Error", "Please choice at least one Compendium data.");
                                return false;
                            }

                            formData.append('CH_CD_model', JSON.stringify(CH_CD_List));
                            formData.append('CH_SkillT_model', JSON.stringify(CH_SkillT_List));
                            formData.append('CH_SSP_model', JSON.stringify(CH_SSP_List));
                            formData.append('CH_SM_model', JSON.stringify(CH_SM_List));
                            $.ajax({
                                type: "POST",
                                url: document.baseURI + "/Counsellor/CaseHistory/",
                                data: formData,
                                cache: false,
                                contentType: false,
                                processData: false,
                                success: function (resp) {
                                    if (resp.StatusType == "success") {
                                        toastr.success("Success", resp.Message);
                                        jQuery.event.trigger("ajaxStop");
                                    }
                                    else {
                                        toastr.error("Error", resp.Message);
                                    }
                                },
                                error: function (req, error) {
                                    if (error === 'error') { error = req.statusText; }
                                    var errormsg = 'There was a communication error: ' + error;
                                    toastr.error("Error", errormsg);
                                    jQuery.event.trigger("ajaxStop");
                                    return false;
                                }

                            });
                        }
                   // }
                   // return bResponse;

                }
                else {
                        toastr.error('Error', "Please fill all required fields!!");
                    }

            });//End Submit Data

        });//

        function HideSearchEmpty() {
            $('#sub-data').html(''); $('#sub-data1').html(''); $('#sub-data2').html(''); $('#sub-data3').html('');
        }
        function BindData(Paratbl, dataall = "", sby_cnlinksearch="") {
            debugger;
            HideSearchEmpty();
            //jQuery.event.trigger("ajaxStart");
            $('#submission-data').removeClass("text-danger");
            var url = $('#submission-form').attr("action");
            //var formData = $('#submission-form').serialize();

            var formData = new FormData();
            var sby_cn = $('#sby_cn').val();
            var sby_ct = $('#sby_ct').val();
            var sby_jo = $('#sby_jo').val();
            var sby_cd = $('#sby_cd').val();
            var sby_e =  $('#sby_e').val();
            var sby_mi = $('#sby_mi').val();
            var sby_cu = $('#sby_cu').val();
            var sby_lc = $('#sby_lc').val();
            if (sby_cnlinksearch != "") {
                sby_cn = sby_cnlinksearch;
            }

            var DList = {
                Para1: sby_cn, Para2: sby_ct, Para3: sby_jo, Para4: sby_cd,
                Para5: sby_e, Para6: sby_mi, Para7: sby_cu, Para8: sby_lc, Paratbl: Paratbl, ParaAll: dataall
            };
            formData.append('DList', JSON.stringify(DList));
            $.ajax({
                url: document.baseURI + "/Counsellor/GetCoursesDetail/",
                //data: JSON.stringify(DList),//{ 'District': District, 'Block': Block },
                type: "Post",
                data: formData,
                cache: false,
                contentType: false,
                processData: false,
                success: function (resp) {
                    if (resp.IsSuccess) {
                        //jQuery.event.trigger("ajaxStop");
                        $('#sub-data').html(resp.html_CD);//Course Details
                        $('#sub-data1').html(resp.html_ST);//Skill Training
                        $('#sub-data2').html(resp.html_SSP);//Scholarshhip
                        $('#sub-data3').html(resp.html_SM);//Schemes
                        if ($.fn.dataTable.isDataTable('#DataListCD')) {
                            $("#DataListCD").dataTable().fnDestroy();
                        }
                        if ($.fn.dataTable.isDataTable('#DataListSCME')) {
                            $("#DataListSCME").dataTable().fnDestroy();
                        }
                        if ($.fn.dataTable.isDataTable('#DataListSSP')) {
                            $("#DataListSSP").dataTable().fnDestroy();
                        }
                        if ($.fn.dataTable.isDataTable('#DataListST')) {
                            $("#DataListST").dataTable().fnDestroy();
                        }

                        setTimeout(function () {

                            // start Table
                            $('.tbl').DataTable({
                                //paging: false,
                                fixedHeader: true,
                                responsive: true,
                                //responsive: false,
                                // scrollCollapse: false,
                                "dom": '<"pull-left"f><"pull-right"l>tip',
                                "pageLength": 10,
                                "lengthChange": false,
                                "buttons": [
                                    {
                                        extend: 'excel',
                                        text: 'Export excel',
                                        className: 'exportExcel',
                                        filename: 'Export excel',
                                        exportOptions: {
                                            modifier: {
                                                page: 'all'
                                            }
                                        }
                                    }]

                            });

                            $("#collaps_CD").removeClass('active');
                            $("#collaps_ST").removeClass('active');
                            $("#collaps_SSP").removeClass('active');
                            $("#collaps_SHE").removeClass('active');

                        }, 500);

                        // $('table tbody').on('click', 'td', function () {
                        //     ////alert(table.cell(this).data());
                        // });
                    }
                    else {
                        $('#submission-data').html("Record Not Found !!");//TO DO
                        $('#submission-data').addClass("text-danger");//TO DO
                        // jQuery.event.trigger("ajaxStop");
                    }
                },
                error: function (req, error) {
                    if (error === 'error') { error = req.statusText; }
                    var errormsg = 'There was a communication error: ' + error;
                    $('#submission-data').html(errormsg);
                    //jQuery.event.trigger("ajaxStop");
                    return false;
                }
            });
        }

        function GetStudData(Ele) {
            BindStudentDetailClear();
            $('#' + Ele).empty();
            $('#' + Ele).prop("disabled", false);
            $('#' + Ele).append($("<option>").val('').text('Select'));
            var Para = $('input[name="TypeCase"]:checked').val();
            if (Para != undefined) {
                $.ajax({
                    url: document.baseURI + "/Counsellor/GetStudentlList",
                    type: "Post",
                    data: JSON.stringify({ 'Para': Para, 'SearchBy': $('input[name=Searchtxt]').val(), 'DOB': $('input[name=DOBtxt]').val() }),
                    contentType: "application/json; charset=utf-8",
                    global: false,
                    async: false,
                    dataType: "json",
                    success: function (resp) {
                        if (resp.IsSuccess) {
                            StudDList = JSON.parse(resp.res);
                            $.each(StudDList, function (i, exp) {
                                $('#' + Ele).append($("<option>").val(exp.CaseID).text(exp.CaseID + ' - ' + exp.Name));
                            });
                        }
                    },
                    error: function (req, error) {
                        if (error === 'error') { error = req.statusText; }
                        var errormsg = 'There was a communication error: ' + error;
                        //Do To Message display
                    }
                });
                $('#' + Ele).trigger("chosen:updated");
            }
            else {
                toastr.error("Error", "Please check Search By : Name, Case, Date of birth.");
            }

        }

        function CaseHistoryCount(RowId = "", CaseID = "") {
            debugger;
            RowId = RowId == "" ? "" : RowId;
            CaseID = CaseID == "" ? "" : CaseID;
            $.ajax({
            url: '@Url.Action("GetCaseHistoryCount", "Counsellor")',
            data: { RowId: RowId, CaseID: CaseID  },
            type: 'POST',
                success: function (resp) {
                    var noofch = resp.res;
                    if (noofch != undefined && noofch!='') {
                        $('#sg-ch').show();
                        $('#NoofchLink').attr('href', document.baseURI+"/Counsellor/CaseHDetail?RowId=" + RowId + "&&" + "CaseID=" + CaseID);
                        $('#NoofchLink').text(noofch);
                    }
                    else
                        $('#sg-ch').hide();
                }
            });
        }

        function GetRIASEClData() {
            debugger;
            RIASECl3Val = []; $('#lblPsyResultMax3').html("");
            var CaseID = $('select[name=CaseID]').val();
            $.ajax({
                url: document.baseURI + "/Counsellor/GetRIASEClList",
                type: "Post",
                data: JSON.stringify({ 'CaseID': CaseID }),
                contentType: "application/json; charset=utf-8",
                global: false,
                async: false,
                dataType: "json",
                success: function (resp) {
                    if (resp.IsSuccess) {
                        RIASEClList = JSON.parse(resp.res);
                        var rowmax3 = 0;
                        $.each(RIASEClList, function (i, exp) {
                            rowmax3++;
                            if (i<=2) {
                                RIASECl3Val.push(exp.QuestionCode);
                                RIASEC_ID_Pk = exp.RIASEC_ID_Pk;
                                $('#lblPsyResultMax3').append(rowmax3+". " + exp.SectionNameEng +" ");
                            }
                        });

                        $('#RIASECTest_Id_fk').val(RIASEC_ID_Pk);
                    }
                },
                error: function (req, error) {
                    if (error === 'error') { error = req.statusText; }
                    var errormsg = 'There was a communication error: ' + error;
                    //Do To Message display
                }
            });

        }

        function RToCData(AllRC) {
            var RC3Val = AllRC == true? "": RIASECl3Val.join(",");
             $.ajax({
               url: '@Url.Action("RIASECldata", "Counsellor")',
                 data: { Para: RC3Val  },
               type: 'POST',
                 success: function (data) {
                     debugger;
                   $("#RToCResData").html(data);
                   //var table = $('#DataListRC').dataTable({
                   //    "sDom": "Ttfrip",
                   //    "oTreeTable": {
                   //        "fnPreInit": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {

                   //        },
                   //        "showExpander": true
                   //        // The other settings to override the default options of jquery.treeTable, e.g. childPrefix, etc.
                   //    }
                   //    // The other settings of jquery.dataTables here...
                   //});

                 }
             });
        }

        function loopRC() {
            RCSList = [];
            RCSList.push({ sln: "1", stn: 'R', fulln:'REALISTIC'})
            RCSList.push({ sln: "2", stn: 'I', fulln:'INVESTIGATIVE'})
            RCSList.push({ sln: "3", stn: 'A', fulln:'ARTISTIC'})
            RCSList.push({ sln: "4", stn: 'S', fulln:'SOCIAL'})
            RCSList.push({ sln: "5", stn: 'E', fulln:'ENTERPRISING'})
            RCSList.push({ sln: "6", stn: 'C', fulln:'CONVENTIONAL'})
        }

        function GetSearchCD() {
                $.ajax({
                    url: document.baseURI + "/Counsellor/GetSearchByCD",
                    type: "Post",
                    data: '',
                    contentType: "application/json; charset=utf-8",
                    global: false,
                    async: false,
                    dataType: "json",
                    success: function (resp) {
                        if (resp.IsSuccess) {

                            var CDList = JSON.parse(resp.res);
                            var cn = [], ct = [], jo = [], cd = [], e = [], mi = [], cu = [], lc = [];
                            $.each(CDList.Table, function (i, exp) {
                                cn.push(exp.CN);
                            });
                            $.each(CDList.Table1, function (i, exp) {
                                ct.push(exp.CT);
                            });
                            $.each(CDList.Table2, function (i, exp) {
                                jo.push(exp.JO);
                            });
                            $.each(CDList.Table3, function (i, exp) {
                                cd.push(exp.CD);
                            });
                            $.each(CDList.Table4, function (i, exp) {
                                e.push(exp.EB);
                            });
                            $.each(CDList.Table5, function (i, exp) {
                                mi.push(exp.MI);
                            });
                            $.each(CDList.Table6, function (i, exp) {
                                cu.push(exp.CU);
                            });
                            $.each(CDList.Table7, function (i, exp) {
                                lc.push(exp.LC);
                            });

                            //var scnjoin = ((cn.join(",")).split(','));
                            $("#sby_cn")
                                .autocomplete({
                                    minLength: 0,
                                    source: function (request, response) {
                                        response($.ui.autocomplete.filter(
                                            cn, extractLast(request.term)));
                                    },
                                    focus: function () {
                                        return false;
                                    },
                                    select: function (event, ui) {
                                        var terms = split(this.value);
                                        // remove the current input
                                        terms.pop();
                                        // add the selected item
                                        terms.push(ui.item.value);
                                        // add placeholder to get the comma-and-space at the end
                                        terms.push("");
                                        this.value = terms.join(", ");
                                        return false;
                                    }
                                });
                            $("#sby_ct")
                                .autocomplete({
                                    minLength: 0,
                                    source: function (request, response) {
                                        response($.ui.autocomplete.filter(
                                            ct, extractLast(request.term)));
                                    },
                                    focus: function () {
                                        return false;
                                    },
                                    select: function (event, ui) {
                                        var terms = split(this.value);
                                        // remove the current input
                                        terms.pop();
                                        // add the selected item
                                        terms.push(ui.item.value);
                                        // add placeholder to get the comma-and-space at the end
                                        terms.push("");
                                        this.value = terms.join(", ");
                                        return false;
                                    }
                                });
                            $("#sby_jo")
                                .autocomplete({
                                    minLength: 0,
                                    source: function (request, response) {
                                        response($.ui.autocomplete.filter(
                                            jo, extractLast(request.term)));
                                    },
                                    focus: function () {
                                        return false;
                                    },
                                    select: function (event, ui) {
                                        var terms = split(this.value);
                                        // remove the current input
                                        terms.pop();
                                        // add the selected item
                                        terms.push(ui.item.value);
                                        // add placeholder to get the comma-and-space at the end
                                        terms.push("");
                                        this.value = terms.join(", ");
                                        return false;
                                    }
                                });
                            $("#sby_cd")
                                .autocomplete({
                                    minLength: 0,
                                    source: function (request, response) {
                                        response($.ui.autocomplete.filter(
                                            cd, extractLast(request.term)));
                                    },
                                    focus: function () {
                                        return false;
                                    },
                                    select: function (event, ui) {
                                        var terms = split(this.value);
                                        // remove the current input
                                        terms.pop();
                                        // add the selected item
                                        terms.push(ui.item.value);
                                        // add placeholder to get the comma-and-space at the end
                                        terms.push("");
                                        this.value = terms.join(", ");
                                        return false;
                                    }
                                });
                            $("#sby_e")
                                .autocomplete({
                                    minLength: 0,
                                    source: function (request, response) {
                                        response($.ui.autocomplete.filter(
                                            e, extractLast(request.term)));
                                    },
                                    focus: function () {
                                        return false;
                                    },
                                    select: function (event, ui) {
                                        var terms = split(this.value);
                                        // remove the current input
                                        terms.pop();
                                        // add the selected item
                                        terms.push(ui.item.value);
                                        // add placeholder to get the comma-and-space at the end
                                        terms.push("");
                                        this.value = terms.join(", ");
                                        return false;
                                    }
                                });
                            $("#sby_mi")
                                .autocomplete({
                                    minLength: 0,
                                    source: function (request, response) {
                                        response($.ui.autocomplete.filter(
                                            mi, extractLast(request.term)));
                                    },
                                    focus: function () {
                                        return false;
                                    },
                                    select: function (event, ui) {
                                        var terms = split(this.value);
                                        // remove the current input
                                        terms.pop();
                                        // add the selected item
                                        terms.push(ui.item.value);
                                        // add placeholder to get the comma-and-space at the end
                                        terms.push("");
                                        this.value = terms.join(", ");
                                        return false;
                                    }
                                });
                            $("#sby_cu")
                                .autocomplete({
                                    minLength: 0,
                                    source: function (request, response) {
                                        response($.ui.autocomplete.filter(
                                            cu, extractLast(request.term)));
                                    },
                                    focus: function () {
                                        return false;
                                    },
                                    select: function (event, ui) {
                                        var terms = split(this.value);
                                        // remove the current input
                                        terms.pop();
                                        // add the selected item
                                        terms.push(ui.item.value);
                                        // add placeholder to get the comma-and-space at the end
                                        terms.push("");
                                        this.value = terms.join(", ");
                                        return false;
                                    }
                                });
                            $("#sby_lc")
                                .autocomplete({
                                    minLength: 0,
                                    source: function (request, response) {
                                        response($.ui.autocomplete.filter(
                                            lc, extractLast(request.term)));
                                    },
                                    focus: function () {
                                        return false;
                                    },
                                    select: function (event, ui) {
                                        var terms = split(this.value);
                                        // remove the current input
                                        terms.pop();
                                        // add the selected item
                                        terms.push(ui.item.value);
                                        // add placeholder to get the comma-and-space at the end
                                        terms.push("");
                                        this.value = terms.join(", ");
                                        return false;
                                    }
                                });

                        }
                    },
                    error: function (req, error) {
                        if (error === 'error') { error = req.statusText; }
                        var errormsg = 'There was a communication error: ' + error;
                        //Do To Message display
                    }
                });
            //$('#sby_cn').trigger("chosen:updated");
        }

        function split(val) {
            return val.split(/,\s*/);
        }
        function extractLast(term) {
            return split(term).pop();
        }
        function HideSearchCD() {
            $('#dv-scd').show();
        }
        function CountTime() {
            var stime = new Date($('#StratTime').val());
            var timer2 = "0:05";
            var seconds = 0;
            var minutes = 0;
            var interval = setInterval(function () {
                seconds++;
               // var timer = timer2.split(':');
                //by parsing integer, I avoid all extra string processing
                //var minutes = parseInt(timer[0], 10);
                //var seconds = parseInt(timer[1], 10);
                //--seconds;
                //minutes = (seconds < 0) ? --minutes : minutes;
                //console.log(minutes, seconds);
                if (seconds > 59) {
                    minutes++;
                    seconds = 0;
                }
               // seconds = (seconds > 59) ? 0 : seconds;
                //seconds = (seconds < 10) ? '0' + seconds : seconds;
                $('.countdown').html(minutes + ':' + seconds);
            }, 1000);
        }

        function Inputisvalid() {
            var isvald = true;
            if ($('#CaseID').val() == "-1" || $('#CaseID').val() == "0" || $('#CaseID').val() == "") {
                toastr.error("Error", 'Please Select Option CaseID');
                isvald = false;
            }
            if ($('#ClassId').val() == "-1" || $('#ClassId').val() == "0" || $('#ClassId').val()=="") {
                toastr.error("Error", 'Please Select Option Class');
                isvald = false;
            }
            if ($('#TypeCounsellor').val() == "-1" || $('#TypeCounsellor').val() == "0" || $('#TypeCounsellor').val() =="") {
                toastr.error("Error", 'Please Select Option Type of counsellor');
                isvald = false;
            }
            if ($('#Subject').val() == "-1" || $('#Subject').val() == "0" || $('#Subject').val() =="") {
                toastr.error("Error", 'Please Select Choice Subject');
                isvald = false;
            }
            //if ($('#Counselling').val() == "-1" || $('#Counselling').val() == "-0") {
            //    toastr.error("Error", 'Please Select Counselling');
            //    isvald = false;
            //}
            //if ($('#Counselling').val() == "-1" || $('#Counselling').val() == "-0") {
            //    toastr.error("Error", 'Please Select Counselling');
            //    isvald = false;
            //}
            return isvald;
        }
        function BindStudentDetailClear() {
            $('#div-stud').hide();
            CaseHistoryCount("", 0);
            $('#div-stud').hide();
            $('#lsn').html("");
            $('#ldob').html("");
            $('#lregdt').html("");
            $('#lsch').html("");
            $('#ClassId').val("");
            $('#hd-tenth').hide();
            $('#hd-twelfth').hide();
        }

    </script>
}

