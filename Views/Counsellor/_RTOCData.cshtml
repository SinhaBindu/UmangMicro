@using System.Data
@{
    DataSet ds = new DataSet();
    DataTable dtg = new DataTable();
    DataTable dtm = new DataTable();
    if (Model != null)
    {
        ds = Model;
        dtg = ds.Tables[0];
        dtm = ds.Tables[1];
    }
    DataView view = new DataView(dtg.Select("SectionNameEng<>'All' And TypeofSectionEng<>'_ALL'").CopyToDataTable());
    DataTable dtsn = view.ToTable(true, "SectionNameEng");
    DataTable dtts = view.ToTable(true, "TypeofSectionEng");
}

<style>
    .multilevel-accordion-menu .is-accordion-submenu-parent a {
        background: #4d5158;
    }

    .multilevel-accordion-menu .is-accordion-submenu a {
        background: #35383d;
    }

    .multilevel-accordion-menu .sublevel-1 {
        text-indent: 1rem;
    }

    .multilevel-accordion-menu .sublevel-2 {
        text-indent: 2rem;
    }

    .multilevel-accordion-menu .sublevel-3 {
        text-indent: 3rem;
    }

    .multilevel-accordion-menu .sublevel-4 {
        text-indent: 4rem;
    }

    .multilevel-accordion-menu .sublevel-5 {
        text-indent: 5rem;
    }

    .multilevel-accordion-menu .sublevel-6 {
        text-indent: 6rem;
    }

    .multilevel-accordion-menu a {
        color: #fefefe;
        box-shadow: inset 0 -1px #41444a;
    }

        .multilevel-accordion-menu a::after {
            border-color: #fefefe transparent transparent;
        }

    .multilevel-accordion-menu .menu > li:not(.menu-text) > a {
        padding: 1.2rem 1rem;
    }

    .multilevel-accordion-menu .is-accordion-submenu-parent[aria-expanded="true"] a.subitem::before {
        content: "\f016";
        font-family: FontAwesome;
        margin-right: 1rem;
    }

    .multilevel-accordion-menu .is-accordion-submenu-parent[aria-expanded="true"] a::before {
        content: "\f07c";
        font-family: FontAwesome;
        margin-right: 1rem;
    }

    .multilevel-accordion-menu .is-accordion-submenu-parent[aria-expanded="false"] a::before {
        content: "\f07b";
        font-family: FontAwesome;
        margin-right: 1rem;
    }
</style>
<link href="~/Content/assets/mgaccordion.css" rel="stylesheet" />

@*<strong>Schemes</strong>*@
<div class="row row-deck">
    <div class="col-lg-12 col-md-12">
        <div class="card">
            <div class="table-responsive">

                <table class="table table-bordered table-hover dt-responsive display" id="DataListRC" width="100%">
                    <thead>
                        <tr>
                            @*<th>SrNo.</th>*@
                            @*<th></th>*@
                            <th>Section</th>
                            <th>Type Of Subject</th>
                            <th>Subject Details</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int sno = 1; int indx = 0;
                            if (Model != null)
                            {
                                foreach (DataRow dr in dtg.Rows)
                                {
                                    string SectionNameEng = Convert.ToString(dr["SectionNameEng"]);
                                    string TypeofSectionEng = Convert.ToString(dr["TypeofSectionEng"]);

                                    if (TypeofSectionEng.ToLower() == "_all" && SectionNameEng.ToLower() != "all")
                                    {
                                        <tr style="color:#1b6907;">
                                            <td data-title="SectionNameEng" class="@("SectionNameEng-" + SectionNameEng.Replace(" ", "_").ToLower())">@SectionNameEng</td>
                                            <td data-title="TypeofSectionEng"></td>
                                            <td data-title=""></td>
                                        </tr>
                                    }

                                    else if (TypeofSectionEng.ToLower() != "_all")
                                    {
                                        var dtsdetails = dtm.AsEnumerable()?.Where(x => x.Field<string>("SectionNameEng") == dr["SectionNameEng"].ToString() && x.Field<string>("TypeofSectionEng") == dr["TypeofSectionEng"].ToString()).CopyToDataTable();

                                        <tr class="@("SectionNameEng-" + SectionNameEng.Replace(" ", "_").ToLower())" style="color:#0000FF;">
                                            <td data-title="SectionNameEng"></td>
                                            <td data-title="TypeofSectionEng" class="@("TypeofSectionEng-" + TypeofSectionEng.Replace(" ", "_").ToLower())">@TypeofSectionEng</td>
                                            <td data-title=""></td>
                                        </tr>

                                        {
                                            if (dtsdetails != null)
                                            {
                                                foreach (DataRow dr1 in dtsdetails.Rows)
                                                {
                                                    <tr class="@("TypeofSectionEng-" + TypeofSectionEng.Replace(" ", "_").ToLower())" style="color:#0000FF;">
                                                        <td data-title="SectionNameEng"></td>
                                                        <td data-title="TypeofSectionEng"></td>
                                                        <td>
                                                            <input type="checkbox" data-id="@dr1["CH_Id"]" data-name="@dr1["SectionShortEng"]" data-ChPhyId="@dr1["CH_Psy_Id"]" name="Chk_@indx" id="Chk_@indx" value="@dr1["ID"]" />
                                                            <a href="javascript:void(0);" onclick="return BindData('1', '', '@dr1["SectionDetailEng"]');">
                                                                <p>@dr1["SectionDetailNoEng"] . @dr1["SectionDetailEng"]</p>
                                                            </a>
                                                           

                                                        </td>
                                                    </tr>
                                                    indx++;
                                                }
                                            }
                                        }

                                    }
                                    else
                                    {
                                        <tr style="font-size:14px;">
                                            <td data-title=""></td>
                                            <td data-title=""><strong></strong></td>
                                            <td data-title=""><strong></strong></td>
                                        </tr>
                                    }

                                }
                            }
                        }

                    </tbody>

                </table>
                @{
                    foreach (DataRow dr in dtsn.Rows)
                    {
                        string group = "SectionNameEng-" + Convert.ToString(dr["SectionNameEng"]).ToLower();
                        <script>
                                CreateGroup('@group');
                        </script>
                    }
                    foreach (DataRow dr in dtts.Rows)
                    {
                        string group = "TypeofSectionEng-" + Convert.ToString(dr["TypeofSectionEng"]).Replace(" ", "_").ToLower();
                        <script>
                            CreateGroup('@group');
                        </script>
                    }
                }
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/JS/mgaccordion.js"></script>
<!-- <script src="https://code.jquery.com/ui/1.11.4/jquery-ui.js"></script> -->
<script>
    $(document).ready(function () {
        $('.my-nav').mgaccordion();
        $('.my-nav2').mgaccordion({
            theme: 'tree',
            leaveOpen: true
        });
    });
</script>
<script>
    try {
        fetch(new Request("https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js", { method: 'HEAD', mode: 'no-cors' })).then(function (response) {
            return true;
        }).catch(function (e) {
            var carbonScript = document.createElement("script");
            carbonScript.src = "//cdn.carbonads.com/carbon.js?serve=CK7DKKQU&placement=wwwjqueryscriptnet";
            carbonScript.id = "_carbonads_js";
            document.getElementById("carbon-block").appendChild(carbonScript);
        });
    } catch (error) {
        console.log(error);
    }
</script>
<script type="text/javascript">

    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-36251023-1']);
    _gaq.push(['_setDomainName', 'jqueryscript.net']);
    _gaq.push(['_trackPageview']);

    (function () {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();

</script>