@model  UmangMicro.Models.QesRes
@using UmangMicro.Models;
@using UmangMicro.Manager;
@*@model IEnumerable<KGBV_JH.Models.QesRes>*@
@{
    ViewBag.Title = " Case History Reported By List";
    ViewBag.TitleIcon = "fa fa-user";
    ViewBag.SemiTitle = " Case History Reported By List";
    ViewBag.SemiTitleLink = "/";
}
<style>
    input[aria-controls="DataList_0"] {
        height: 50px !important;
        width: 690px !important;
    }
</style>
<div class="admin-breadcrumb">
    <h3>Case History Reported By List</h3>
    <div class="crumb">
        <a href="~/Counsellor/CaseHistory">Case History</a> /  Case History Reported By List
    </div>
</div>
<div class="containers">
    <div class="card">
        <div class="card-body">
            <div id="div-download"></div>
            @using (Html.BeginForm("GetCaseHReportedList", "Report", FormMethod.Post, new { @id = "formid", @class = "loader", autocomplete = "off", enctype = "multipart/form-data" }))
            {
                <div class="row ">

                    <div class="col-md-12">
                        <div class="position-relative form-group">
                            @Html.Partial("_Alerts")
                        </div>
                    </div>
                    <div class="col-md-12 col-md-offset-5">
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">Search  :</legend>
                            <div class="row">

                                <div class="col-md-5" style="display:none;">
                                    <div class="position-relative form-group">
                                        @*<label>Search By : </label>*@
                                        <div class="checkbox">
                                            @foreach (var item in CommonModel.GetTypeCase())
                                            {
                                                @Html.RadioButtonFor(model => model.TypeCase, item.Value, new { id = "TypeCase" + item.Value, @required = "required" }) @item.Text
                                            }
                                            @Html.ValidationMessageFor(model => model.TypeCase, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.ValidationMessageFor(model => model.TypeCase, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6" style="display:none;">
                                    <div class="position-relative form-group">
                                        @Html.EditorFor(model => model.Searchtxt, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                        &nbsp;&nbsp;&nbsp;&nbsp; @Html.EditorFor(model => model.DOBtxt, new { htmlAttributes = new { @class = "form-control datepicker", @placeholder = "DOB", @style = "display:none;" } })
                                        @Html.ValidationMessageFor(model => model.Searchtxt, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                @*<div class="col-md-2">
                                        <div class="position-relative form-group mt-sm-4">
                                            <a href="javascript:void(0);" onclick="return GetStudData('CaseID')" class="btn btn-info text-white">Search</a>
                                        </div>
                                    </div>*@
                                <div class="col-md-2">
                                    <div class="position-relative form-group">
                                        <label class="tar-pull-manage2">From Date :  </label>
                                        <div id="demo-dp-range">
                                            @Html.EditorFor(model => model.FD, new { htmlAttributes = new { @class = "form-control datepicker", @placeholder = "From Date" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="position-relative form-group">
                                        <label class="tar-pull-manage2">To Date : </label>
                                        <div id="demo-dp-range">
                                            @Html.EditorFor(model => model.TD, new { htmlAttributes = new { @class = "form-control datepicker", @placeholder = "To Date" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="position-relative form-group">
                                        @Html.LabelFor(model => model.DistrictId, htmlAttributes: new { @class = "" })
                                        @Html.DropDownListFor(m => m.DistrictId, new List<SelectListItem>(), "All", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.DistrictId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="position-relative form-group">
                                        @Html.LabelFor(model => model.BlockId, htmlAttributes: new { @class = "" })
                                        @Html.DropDownListFor(m => m.BlockId, new List<SelectListItem>(), "All", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.BlockId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                @*<div class="col-md-2">
                                        @Html.LabelFor(model => model.SchoolId, htmlAttributes: new { @class = "" })
                                        @Html.DropDownListFor(m => m.SchoolId, CommonModel.GetSchoolList(), "All", new { @class = "form-control select2" })
                                        @Html.ValidationMessageFor(model => model.SchoolId, "", new { @class = "text-danger" })
                                    </div>*@
                                <div class="col-md-2">
                                    <label class="mt-3"></label>
                                    <div class="clearfix"></div>
                                    <input type="submit" id="btnshow" name="btnClick" value="Search" class="btn  btn-primary text-right" title="" />
                                </div>
                                <div class="mark-devide2"></div>
                                <div class="breaker"></div>
                            </div>

                        </fieldset>
                    </div>
                </div>

                <div class="breaker"></div>
                <div class="col-md-12">
                    <div class="col-sm-12" id="sub-data">
                    </div>
                </div>
            }

            @*<div class="panel-body">
                    <div class="row">
                        <div class="col-sm-12" id="sub-data-view">

                        </div>
                    </div>
                </div>*@

        </div>
    </div>
</div>



@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/JS/Master.js"></script>

    <script>
        $(document).ready(function () {

            GetDistrict('DistrictId');
            $("#DistrictId option[value='']").remove();
            $('#DistrictId').append(`<option value="0">ALL</option>`);
            $("#DistrictId").val("0");
            $('input[name=TypeCase]').click(function () {
                if ($(this).val() == "1") {
                    $('#DOBtxt').show();
                    $('#DOBtxt').attr('required', 'required');
                }
                else {
                    $('#DOBtxt').hide(); $('#DOB').val('');
                    $('#DOBtxt').removeAttr('required');
                }
            });
            //GetSchool('SchoolId', '', $('#DistrictId').val(), $('#BlockId').val());
            //$('#SchoolId').val(('@MvcApplication.CUser.SchoolId').toLowerCase());
            //$('#SchoolId').attr("style", "pointer-events: none;");
            if ('@CommonModel.GetUserRole()' === '@MvcApplication.CUser.Role') {
                    $('#DistrictId').val(('@MvcApplication.CUser.DistrictId').toLowerCase());
                    $('#DistrictId').attr("style", "pointer-events: none;");
                    OnChagDistricts('BlockId', $('#DistrictId').val());
                    $('#BlockId').val(('@MvcApplication.CUser.BlockId').toLowerCase());
                    $('#BlockId').attr("style", "pointer-events: none;");
                     @*$('#SchoolId').val(('@MvcApplication.CUser.SchoolId').toLowerCase());*@
                      //$('#SchoolId').trigger('change');
                     //$("#SchoolId").select2({ disabled: 'readonly' });
                $('#DistrictId').trigger('change');
                //$("#DistrictId").select2({ disabled: 'readonly' });
                $('#BlockId').trigger('change');
                //$("#BlockId").select2({ disabled: 'readonly' });
            }
            $('#DistrictId').change(function () {
                OnChagDistricts('BlockId', $('#DistrictId').val());
                $("#BlockId option[value='']").remove();
                $('#BlockId').append(`<option value="0">ALL</option>`);
                $("#BlockId").val("0");
            });
            $('#formid').submit(function (e) {
                e.preventDefault();
                LoadReport();
            })
            LoadReport();
        });

        function LoadReport() {
            debugger;
            $('#sub-data').html("");
            jQuery.event.trigger("ajaxStart");
            $('#sub-data').removeClass("text-danger");
            var id = '#formid'
            var url = $(id).attr("action");
            var Sdt = $("#FD").val() == "" ? "" : $("#FD").val();
            var Edt = $("#TD").val() == "" ? "" : $("#TD").val();
            var DistrictId = $("#DistrictId").val() == "" ? "" : $("#DistrictId").val();
            var BlockId = $("#BlockId").val() == "" ? "" : $("#BlockId").val();
            var Para = $('input[name="TypeCase"]:checked').val();
            if (Para == undefined) { Para = "" };
            $.ajax({
                // url: url,
                url: document.baseURI + "/Report/GetCaseHReportedList",
                type: "POST",
                data: { 'Para': Para, 'SearchBy': $('input[name=Searchtxt]').val(), 'DOB': $('input[name=DOBtxt]').val(), 'Sdt': Sdt, 'Edt': Edt, 'DistrictId': DistrictId, 'BlockId': BlockId },
                //{ 'Para': Para, 'SearchBy': $('input[name=Searchtxt]').val() }
                // contentType: "application/json",
                // dataType: "json",
                // contentType: "application/json; charset=utf-8",
                //async: false,
                success: function (resp) {
                    if (resp.IsSuccess) {
                        $('#sub-data').html(resp.res); $('#sub-data').addClass("text-black");
                        jQuery.event.trigger("ajaxStop");

                        if ($.fn.dataTable.isDataTable('#DataList')) {
                            $("#DataList").dataTable().fnDestroy();
                        }
                        table = $('#DataList').DataTable({
                            //paging: false,
                            fixedHeader: true,
                            responsive: true,
                            //responsive: false,
                            // scrollCollapse: false,
                            "dom": '<"pull-left"f><"pull-right"l>tip',
                            "pageLength": 10,
                           // "lengthChange": false,
                            fixedColumns: {
                                leftColumns: 1,
                                rightColumns: 1
                            },
                            buttons: [{
                                extend: 'excel', text: '<span><i class="fa fa-download"></i>Export</span>', title: 'User Lists',//$('#IDDistrict option:selected').text() +
                                className: 'btn btn-primary button-icon mr-3 mt-1 mb-1',
                                filename: 'User List',
                                exportOptions: { modifier: { page: 'all' } }
                            }],
                        });
                        $('.dataTables_filter input[type="search"]').css(
                            { 'width': '500px', 'display': 'inline-block' }
                        );
                        //$('#div-download').empty();
                        //table.buttons().container().appendTo($('#div-download'));
                    }
                    else {
                        $('#sub-data').html(resp.Data); $('#sub-data').addClass("text-danger");
                        // toastr.error("Error", errormsg);
                        jQuery.event.trigger("ajaxStop");
                        return false;
                    }
                },
                error: function (req, error) {
                    if (error === 'error') { error = req.statusText; }
                    var errormsg = 'There was a communication error: ' + error;
                    $('#sub-data').addClass("text-danger");
                    toastr.error("Error", errormsg);
                    jQuery.event.trigger("ajaxStop");
                    return false;
                }
            });
        }


    </script>
}
