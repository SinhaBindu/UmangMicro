@model UmangMicro.Models.FilterModel
@using UmangMicro.Models;
@using UmangMicro.Manager;

@{
    ViewBag.Title = "Training List";
    ViewBag.TitleIcon = "fa fa-user";
    ViewBag.SemiTitle = "Training List";
    ViewBag.SemiTitleLink = "/";
}

<div class="admin-breadcrumb">
    <h3>Training List</h3>
    <div class="crumb">
        <a href="~/Training/AddTraining">Add Training </a> / Training List
    </div>
</div>
<div class="containers">
    <div class="card">
        <div class="card-body">
            <div id="div-download"></div>
            @using (Html.BeginForm("GetIndex", "Training", FormMethod.Post, new { @id = "formid", @class = "loader", autocomplete = "off", enctype = "multipart/form-data" }))
            {
                <div class="row">
                    <div class="col-md-12">
                        <div class="position-relative form-group">
                            @Html.Partial("_Alerts")
                        </div>
                    </div>
                    <div class="col-md-12 col-md-offset-5">
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">Search  :</legend>
                            <div class="row">
                                <div class="col-md-2" id="div-dis">
                                    <div class="position-relative form-group">
                                        <span class="text-danger" id="rqdis" style="display:none;">*</span>
                                        @Html.LabelFor(m => m.Trainingtype, new { @class = "" })
                                        @Html.DropDownListFor(m => m.Trainingtype, CommonModel.GetTrainingType().Where(x => x.Value != "0"), new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="position-relative form-group">
                                        <label class="tar-pull-manage2">From Date :  </label>
                                        <div id="demo-dp-range">
                                            @Html.EditorFor(model => model.FD, new { htmlAttributes = new { @class = "form-control datepicker", @placeholder = "From Date" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="position-relative form-group">
                                        <label class="tar-pull-manage2">To Date : </label>
                                        <div id="demo-dp-range">
                                            @Html.EditorFor(model => model.TD, new { htmlAttributes = new { @class = "form-control datepicker", @placeholder = "To Date" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3" id="div-dis">
                                    <div class="position-relative form-group">
                                        <span class="text-danger" id="rqdis" style="display:none;">*</span>
                                        @Html.LabelFor(m => m.DistrictId, new { @class = "" })
                                        @Html.DropDownListFor(m => m.DistrictId, CommonModel.GetDistrict(), "Select", new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    @Html.LabelFor(model => model.SchoolId, htmlAttributes: new { @class = "" })
                                    @Html.DropDownListFor(m => m.SchoolId, new List<SelectListItem>(), null, new { @class = "form-control select2" })
                                </div>
                                <div class="col-md-1">
                                    <label class="mt-3"></label>
                                    <div class="clearfix"></div>
                                    <input type="submit" id="btnshow" name="btnClick" value="Search" class="btn btn-primary text-right" title="" />
                                </div>
                                <div class="mark-devide2"></div>
                                <div class="breaker"></div>
                            </div>
                        </fieldset>
                    </div>
                </div>
                <div class="breaker"></div>
                <div class="col-md-12">
                    <div class="col-sm-12" id="sub-data"></div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/JS/Master.js"></script>

    <script>
        $(document).ready(function () {
            $('#DistrictId').change(function () {
                GetSchool("SchoolId", "", $(this).val(), "");
            });

            if ('@CommonModel.GetUserRole()' === '@MvcApplication.CUser.Role') {
                $('#DistrictId').val('@MvcApplication.CUser.DistrictId'.toLowerCase());
                $('#DistrictId').attr("style", "pointer-events: none;");
                GetSchool("SchoolId", "", '@MvcApplication.CUser.DistrictId', "");
                $('#SchoolId').val('@MvcApplication.CUser.SchoolId'.toLowerCase());
                $('#SchoolId').trigger('change');
                $("#SchoolId").select2({ disabled: 'readonly' });
            }

            if ('@CommonModel.GetUserRoleConsultantDist()' === '@MvcApplication.CUser.Role') {
                $('#DistrictId').val('@MvcApplication.CUser.DistrictId'.toLowerCase());
                $('#DistrictId').trigger('change');
                $("#DistrictId").select2({ disabled: 'readonly' });
                GetSchool("SchoolId", "", '@MvcApplication.CUser.DistrictId', "");
            }

            $('#formid').submit(function (e) {
                e.preventDefault();
                LoadReport();
            });

            LoadReport();
        });

        function LoadReport() {
            $('#sub-data').html("");
            jQuery.event.trigger("ajaxStart");
            $('#sub-data').removeClass("text-danger");

            var url = $('#formid').attr("action");
            var Sdt = $("#FD").val();
            var Edt = $("#TD").val();
            var DistrictId = $("#DistrictId").val();
            var SchoolId = $("#SchoolId").val();
            var Training = $("#Trainingtype").val();

            $.ajax({
                url: document.baseURI + "/Training/GetIndex",
                type: "POST",
                data: { 'Sdt': Sdt, 'Edt': Edt, 'DistrictId': DistrictId, 'SchoolId': SchoolId, 'Trainingtype': Training },
                success: function (resp) {
                    if (resp.IsSuccess) {
                        $('#sub-data').html(resp.reshtml);
                        $('#sub-data').addClass("text-black");
                        jQuery.event.trigger("ajaxStop");

                        if ($.fn.dataTable.isDataTable('#DataList')) {
                            $("#DataList").dataTable().fnDestroy();
                        }

                        var table = $('#DataList').DataTable({
                            fixedHeader: true,
                            responsive: true,
                            "dom": '<"pull-left"f><"pull-right"l>tip',
                            "pageLength": 10,
                            fixedColumns: {
                                leftColumns: 1,
                                rightColumns: 1
                            },
                            buttons: [{
                                extend: 'excel', text: '<span><i class="fa fa-download"></i>Export</span>', title: 'User Lists',
                                className: 'btn btn-primary button-icon mr-3 mt-1 mb-1',
                                filename: 'User List',
                                exportOptions: { modifier: { page: 'all' } }
                            }]
                        });

                        $('.dataTables_filter input[type="search"]').css({
                            'width': '500px',
                            'display': 'inline-block'
                        });

                        $('#div-download').empty();
                        table.buttons().container().appendTo($('#div-download'));
                    } else {
                        $('#sub-data').html(resp.Data);
                        $('#sub-data').addClass("text-danger");
                        jQuery.event.trigger("ajaxStop");
                    }
                },
                error: function (req, error) {
                    var errormsg = 'There was a communication error: ' + (error === 'error' ? req.statusText : error);
                    $('#sub-data').addClass("text-danger");
                    toastr.error("Error", errormsg);
                    jQuery.event.trigger("ajaxStop");
                }
            });
        }
    </script>
}
