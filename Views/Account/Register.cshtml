@model UmangMicro.Models.RegisterViewModel
@using UmangMicro.Manager
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}

<style>
    .ulcl {
        columns: 6;
        -webkit-columns: 6;
        -moz-columns: 6;
    }

    .card {
        padding: 0 20px 30px !important;
    }
</style>
<div class="admin-breadcrumb">
    <h3>Teacher/Counsellor Registration</h3>
    <div class="crumb">
        <a href="~/Master/UserDetaillist">User Detail List</a> / Registration
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @id = "formid", @class = "", role = "form", autocomplete = "off", enctype = "multipart/form-data" }))
                {
                    <div class="form-row">
                        <div class="col-md-12">
                            <div class="position-relative form-group">
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary("", new { @class = "text-danger ulcl" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="position-relative form-group">
                                @Html.LabelFor(m => m.Role, new { @class = "" }) <span class="text-danger">*</span>
                                @Html.DropDownListFor(m => m.Role, CommonModel.GetRolesByLoggedinUser(), null, new { @class = "form-control", @required = "required" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="position-relative form-group">
                                @Html.LabelFor(m => m.Name, new { @class = "" }) <span class="text-danger">*</span>
                                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @placeholder = "Name", @required = "required" })
                            </div>
                        </div>
                        @*<div class="col-md-6">
                                <div class="position-relative form-group">
                                    <span class="text-danger">*</span> @Html.LabelFor(m => m.Email, new { @class = "" })
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email", @required = "required" })
                                </div>
                            </div>*@

                        <div class="col-md-6">
                            <div class="position-relative form-group">
                                @Html.LabelFor(m => m.PhoneNumber, new { @class = "" })  <span class="text-danger">*</span>
                                @Html.TextBoxFor(m => m.PhoneNumber, new
                                {
                                    @class = "form-control",
                                    @placeholder = "Phone Number",
                                    @maxlength = "10",
                                    @required = "required",
                                    onkeypress = "return IsNumeric(event);",
                                    ondrop = "return false;",
                                    onpaste = "return false;"
                           })
                                <span id="error" style="color: Red; display: none">* Input digits (0 - 9)</span>
                            </div>
                        </div>
                        <div class="col-md-6" id="div-dis">
                            <div class="position-relative form-group">
                                <span class="text-danger" id="rqdis" style="display:none;">*</span> @Html.LabelFor(m => m.DistrictId, new { @class = "" })
                                @Html.DropDownListFor(m => m.DistrictId, CommonModel.GetDistrict(), "Select", new { @class = "form-control select2" })
                            </div>
                        </div>

                        @*, @required = "required"*@
                        <div class="col-md-6" id="div-sch">
                            <div class="position-relative form-group">
                                <span class="text-danger" id="rqsch" style="display:none;">*</span> @Html.LabelFor(m => m.SchoolId, new { @class = "" })
                                @*@Html.DropDownListFor(m => m.SchoolId, CommonModel.GetSchoolList(), "Select", new { @class = "form-control select2" })*@
                                @Html.DropDownListFor(m => m.SchoolId, new List<SelectListItem>(), null, new { @class = "form-control select2" })
                            </div>
                        </div>

                        @*<div class="col-md-6">
                                <div class="position-relative form-group">
                                    <span class="text-danger">*</span> @Html.LabelFor(m => m.BlockId, new { @class = "" })
                                    @Html.DropDownListFor(m => m.BlockId, new List<SelectListItem>(), null, new { @class = "form-control", @required = "required" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="position-relative form-group">
                                    <span class="text-danger">*</span> @Html.LabelFor(m => m.ClusterId, new { @class = "" })
                                    @Html.DropDownListFor(m => m.ClusterId, new List<SelectListItem>(), null, new { @class = "form-control", @required = "required" })
                                </div>
                            </div>*@



                        @*<div class="col-md-6">
                                <div class="position-relative form-group">
                                    <span class="text-danger">*</span> @Html.LabelFor(m => m.Password, new { @class = "" })
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password", @required = "required" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="position-relative form-group">
                                    <span class="text-danger">*</span>  @Html.LabelFor(m => m.ConfirmPassword, new { @class = "" })
                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "Confirm Password", @required = "required" })
                                </div>
                            </div>*@
                        <div class="break"></div>
                        <div class="col-md-6 offset-lg-5">
                            <div class="mt-4 d-flex align-items-center">
                                @*<h5 class="mb-0">Already have an account? <a href="javascript:void(0);" class="text-primary">Sign in</a></h5>*@
                                <div class="">
                                    <input type="submit" class="btn btn-primary" value="Register" />
                                </div>
                            </div>
                        </div>
                        @*<div class="text-center pt-3">
                                <p class="text-dark mb-0">Already registered?<a href="~/Account/Login" class="text-primary ml-1">Log In now</a></p>
                            </div>*@

                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*@Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/bootstrap")*@
    <script src="~/Scripts/JS/Master.js"></script>


    <script type="text/javascript">
        $(document).ready(function () {
            BindDistrict('DistrictId', 20);
            $('#DistrictId').change(function () {
                //OnChangeDistrict('BlockId', $('#DistrictId').val());
                GetSchool("SchoolId", "", $(this).val(), "");
            });
            //$('#BlockId').change(function () {
            //    OnChangeBlock('ClusterId', $('#BlockId').val());
            //});

            $('#Role').change(function () {
                if ($(this).val() == "Teacher") {
                    $('#SchoolId').attr('required', 'required');
                    $('#DistrictId').attr('required', 'required');
                    $('#rqdis').show(''); $('#rqsch').show('');
                    $('#div-dis').show(''); $('#div-sch').show('');
                }
                else if ($(this).val() == "Consultant") {
                    $('#SchoolId').removeAttr('required');
                    $('#DistrictId').attr('required', 'required');
                    $('#rqdis').show(''); $('#rqsch').hide('');
                    $('#SchoolId').val('');
                    GetSchool("SchoolId", "", "0", "");
                    $('#div-dis').show(''); $('#div-sch').hide('');
                }
                else {
                    $('#SchoolId').removeAttr('required');
                    $('#DistrictId').removeAttr('required');
                    $('#rqdis').hide(''); $('#rqsch').hide('');
                    $('#SchoolId').val(''); $('#DistrictId').val('');
                    BindDistrict('DistrictId', 20); GetSchool("SchoolId", "", "0", "");
                    $('#div-dis').hide(''); $('#div-sch').hide('');
                }
            });

        });
        var specialKeys = new Array();
        specialKeys.push(8); //Backspace
        function IsNumeric(e) {
            var keyCode = e.which ? e.which : e.keyCode
            var ret = ((keyCode >= 48 && keyCode <= 57) || specialKeys.indexOf(keyCode) != -1);
            document.getElementById("error").style.display = ret ? "none" : "inline";
            return ret;
        }
    </script>

}


