@model UmangMicro.Models.UserEditViewModel
@using UmangMicro.Manager
@{
    ViewBag.Title = "Register";
    //Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>@ViewBag.Title - Registration (Umang)</title>
    @*<link href="~/Content/assets/plugins/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
        <link href="~/Content/assets/css/style.css" rel="stylesheet" />
        <link href="~/Content/assets/css/icons.css" rel="stylesheet" />
        <link href="~/Content/assets/css/skin-modes.css" rel="stylesheet" />
        <link href="~/Content/assets/css/main.css" rel="stylesheet" type="text/css">
        <link id="theme" rel="stylesheet" type="text/css" media="all" href="~/Content/assets/css/color1.css" />*@

    @*<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/1.1.1/css/bootstrap-multiselect.css" rel="stylesheet" />*@
    @*<link id="theme" rel="stylesheet" type="text/css" media="all" href="~/Content/assets/css/bootstrap-multiselect.css" />*@
    <style>
        .wrap-login100 {
            margin-top: 40px !important;
            max-width: 700px
        }

        .p-6 {
            padding: 1rem 2rem !important;
        }

        .wrap-login100 {
            width: 70% !important;
            margin-left: 15%;
        }

            .wrap-login100 .form-group {
                width: 48%;
                margin: 0 1%;
                float: left
            }

        @@media screen and (max-width:1024px) {
            .wrap-login100 {
                margin-left: 20%
            }
        }

        @@media screen and (max-width: 768px) {
            .wrap-login100 {
                margin-left: 0%;
                width: 80% !important;
            }

                .wrap-login100 .form-group {
                    width: 100%;
                    margin: 0 0%;
                    float: left
                }
        }
        select[readonly] option, select[readonly] optgroup {
            display: none;
        }
    </style>
</head>
<body>
    <div class="login-img">
        <div class="page h-100">
            <div class="">
                <div class="col col-login mx-auto">
                    <div class="text-center">
                        @*<img src="~/Content/assets/images/USAID logo.png" class="header-brand-img" alt="logo">*@
                    </div>
                </div>
                <div class="container-login100">
                    <div class="wrap-login100 p-6">
                        @using (Html.BeginForm("EditUser", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", autocomplete = "off" }))
                        {
                            @Html.HiddenFor(m => m.Id)
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary("", new { @class = "text-danger" })
                            <span class="login100-form-title">
                                Registration
                            </span>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Name, new { @class = "" })
                                <div class="wrap-input100 validate-input">
                                    @Html.TextBoxFor(m => m.Name, new { @class = "input100", @placeholder = "Name", @required = "required" })
                                    <span class="focus-input100"></span>
                                    <span class="symbol-input100">
                                        <i class="fa fa-user" aria-hidden="true"></i>
                                    </span>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Email, new { @class = "" })
                                <div class="wrap-input100 validate-input">
                                    @Html.TextBoxFor(m => m.Email, new { @class = "input100", @placeholder = "Email", @required = "required" })
                                    <span class="focus-input100"></span>
                                    <span class="symbol-input100">
                                        <i class="fa fa-envelope" aria-hidden="true"></i>
                                    </span>
                                </div>
                            </div>
                            <div class="breaker"></div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.PhoneNumber, new { @class = "" })
                                <div class="wrap-input100 validate-input">
                                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "input100", @placeholder = "Phone Number", @maxlength = "10", @required = "required" })
                                    <span class="focus-input100"></span>
                                    <span class="symbol-input100">
                                        <i class="fa fa-phone" aria-hidden="true"></i>
                                    </span>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.DistrictId, new { @class = "" })
                                <div class="wrap-input100 validate-input">
                                    @Html.DropDownListFor(m => m.DistrictId, new List<SelectListItem>(), null, new { @class = "form-control", @required = "required" })
                                    <span class="focus-input100"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.BlockId, new { @class = "" })
                                <div class="wrap-input100 validate-input">
                                    @Html.DropDownListFor(m => m.BlockId, new List<SelectListItem>(), null, new { @class = "form-control", @required = "required" })
                                    <span class="focus-input100"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.ClusterId, new { @class = "" })
                                <div class="wrap-input100 validate-input">
                                    @Html.DropDownListFor(m => m.ClusterId, new List<SelectListItem>(), null, new { @class = "form-control", @required = "required" })
                                    <span class="focus-input100"></span>
                                </div>
                            </div>
                            <div class="breaker"></div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Role, new { @class = "" })
                                <div class="wrap-input100 validate-input">
                                    @Html.DropDownListFor(m => m.Role, CommonModel.GetRolesByLoggedinUser(), null, new { @class = "form-control", @required = "required" })
                                    @*, @readonly = "true"*@
                                    <span class="focus-input100"></span>
                                </div>
                            </div>
                            @*<div class="form-group">
                                    <div class="wrap-input100 validate-input">
                                        @Html.DropDownListFor(m => m.LocationID, CommonModel.GetLocationsByLoggedinUser(), null, new { @class = "form-control", @required = "required" })
                                        <span class="focus-input100"></span>
                                    </div>
                                </div>*@

                            <div class="breaker"></div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Password, new { @class = "" })
                                <div class="wrap-input100 validate-input">
                                    @Html.PasswordFor(m => m.Password, new { @class = "input100", @placeholder = "Password", @required = "required" })
                                    <span class="focus-input100"></span>
                                    <span class="symbol-input100">
                                        <i class="fa fa-lock" aria-hidden="true"></i>
                                    </span>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "" })
                                <div class="wrap-input100 validate-input">
                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "input100", @placeholder = "Confirm Password", @required = "required" })
                                    <span class="focus-input100"></span>
                                    <span class="symbol-input100">
                                        <i class="fa fa-lock" aria-hidden="true"></i>
                                    </span>
                                </div>
                            </div>
                            <div class="container-login100-form-btn">
                                <input type="submit" class="login100-form-btn btn-primary" value="Register" />
                            </div>
                            @*<div class="text-center pt-3">
                                    <p class="text-dark mb-0">Already registered?<a href="~/Account/Login" class="text-primary ml-1">Log In now</a></p>
                                </div>*@
                        }
                    </div>
                </div>
            </div>
        </div>

    </div>

    @section Scripts {

        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/bootstrap")
        @*<script src="~/Content/assets/js/jquery-3.4.1.min.js"></script>
            <script src="~/Content/assets/js/custom.js"></script>*@
        <!-- Multiple Dropdown list -->
        @*<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/1.1.1/js/bootstrap-multiselect.min.js"></script>*@
        @*<script src="~/Content/assets/js/bootstrap-multiselect.min.js"></script>*@
        <script src="~/Scripts/JS/Master.js"></script>
        @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
               $(document).ready(function () {
                        BindDistrict('DistrictId', 20);
                        $('#DistrictId').change(function () {
                            OnChangeDistrict('BlockId', $('#DistrictId').val());
                        });
                        $('#BlockId').change(function () {
                            OnChangeBlock('ClusterId', $('#BlockId').val());
                        });
                        if ('@Model.Id' != '0' && '@Model.Id' != '') {
                            $('#DistrictId').val('@Model.DistrictId');
                            OnChangeDistrict('BlockId', '@Model.DistrictId');
                            $('#BlockId').val('@Model.BlockId');
                            OnChangeBlock('ClusterId', '@Model.BlockId');
                            $('#ClusterId').val('@Model.ClusterId');
                        }
                 });
</script>

    }

</body>
</html>