
@model UmangMicro.Models.RegModel
@using UmangMicro.Manager
@{
    ViewBag.Title = "Reg";
}

<div class="form-row">
    <div class="col-md-12">
        <div style="text-align: center; font-weight: 700;">
            <h4><strong>Registration </strong></h4>
        </div>
    </div>
    <div class="col-md-12">
        <div class="position-relative form-group">
            @Html.HiddenFor(x => x.ID)
            @Html.AntiForgeryToken()

            @if (Model.ID != 0)
            {
                <strong class="text-primary">Case ID : <strong>@Model.CaseID</strong></strong>
            }
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6" style="display:none;">
        <div class="position-relative form-group">
            <span class="text-danger">*</span>@Html.LabelFor(model => model.LanguangeType, htmlAttributes: new { @class = "" })
            @Html.DropDownListFor(model => model.LanguangeType, CommonModel.GetLanguangeType(), null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.LanguangeType, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6">
        <div class="position-relative form-group">
            <span class="text-danger">*</span>@Html.LabelFor(model => model.RegDate, htmlAttributes: new { @class = "" })
            @Html.EditorFor(model => model.RegDate, new { htmlAttributes = new { @class = "form-control datepicker", @required = "required", @maxlength = "11", @placeholder = "dd-mmm-yyyy" } })
            @Html.ValidationMessageFor(model => model.RegDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6">
        <div class="position-relative form-group">
            <span class="text-danger">*</span>@Html.Label(Model.DisplayName1, htmlAttributes: new { @class = "" })
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger", @required = "required" })
        </div>
    </div>
    <div class="col-md-6">
        <div class="position-relative form-group">
            <span class="text-danger">*</span>@Html.Label(Model.DisplayMN, htmlAttributes: new { @class = "" })
            <span class="text-danger">*</span> @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6">
        <div class="position-relative form-group">
            <span class="text-danger">*</span>@Html.Label(Model.DisplayFN, htmlAttributes: new { @class = "" })
            <span class="text-danger">*</span> @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-6">
        <div class="position-relative form-group">
            <span class="text-danger">*</span>@Html.Label(Model.DisplayDId, htmlAttributes: new { @class = "" })
            @Html.DropDownListFor(m => m.DistrictId, new List<SelectListItem>(), null, new { @class = "form-control", @required = "required" })
            @Html.ValidationMessageFor(model => model.DistrictId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-6">
        <div class="position-relative form-group">
            <span class="text-danger">*</span>@Html.Label(Model.DisplayBId, htmlAttributes: new { @class = "" })
            @Html.DropDownListFor(m => m.BlockId, new List<SelectListItem>(), null, new { @class = "form-control", @required = "required" })
            @Html.ValidationMessageFor(model => model.BlockId, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="col-md-6">
        <div class="position-relative form-group">
            <span class="text-danger">*</span>@Html.Label(Model.DisplayClId, htmlAttributes: new { @class = "" })
            @Html.DropDownListFor(m => m.PanchayatId, new List<SelectListItem>(), null, new { @class = "form-control", @required = "required" })
            @Html.ValidationMessageFor(model => model.PanchayatId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-6">
        <div class="position-relative form-group">
            <span class="text-danger">*</span>@Html.Label(Model.DisplayVillageTxt, htmlAttributes: new { @class = "" })
            @Html.DropDownListFor(m => m.VillageId, new List<SelectListItem>(), null, new { @class = "form-control", @required = "required" })
            @Html.ValidationMessageFor(model => model.VillageId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6" style="display:none;" id="div-villg">
        <div class="position-relative form-group">
            <span class="text-danger">*</span>@Html.LabelFor(model => model.VillageOther, htmlAttributes: new { @class = "" })
            @Html.EditorFor(model => model.VillageOther, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(model => model.VillageOther, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6">
        <div class="position-relative form-group">
            <span class="text-danger">*</span>@Html.LabelFor(model => model.SchoolId, htmlAttributes: new { @class = "" })
            @Html.DropDownListFor(m => m.SchoolId, new List<SelectListItem>(), null, new { @class = "form-control", @required = "required" })
            @Html.ValidationMessageFor(model => model.SchoolId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6">
        <div class="position-relative form-group">
            <span class="text-danger">*</span>@Html.Label(Model.DisplayDOBTxt, htmlAttributes: new { @class = "" })
            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control datepicker", @required = "required", @maxlength = "11", @placeholder = "dd-mmm-yyyy" } })
            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-6">
        <div class="position-relative form-group">
            <span class="text-danger">*</span> @Html.Label(Model.DisplayAgeTxt, htmlAttributes: new { @class = "" })
            @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
            @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-6">
        <div class="position-relative form-group">
           @Html.Label(Model.DisplayMobileTxt, htmlAttributes: new { @class = "" })
            @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @type = "number", @class = "form-control", @maxlength = "10", @required = "required" } })
            @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-6">
        <div class="position-relative form-group">
            <span class="text-danger">*</span>@Html.LabelFor(model => model.Cast, htmlAttributes: new { @class = "" })
            @Html.DropDownListFor(model => model.Cast, CommonModel.GetCastType(), "Select", new { @class = "form-control", @required = "required" })
            @Html.ValidationMessageFor(model => model.Cast, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-6" style="display:none;">
        <div class="position-relative form-group">
            <span class="text-danger">*</span>@Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "" })
            @Html.DropDownListFor(model => model.Sex, CommonModel.GetSexType(), null, new { @class = "form-control", @required = "required" })
            @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-12">
        <div class="position-relative form-group" style="margin-left: 50% !important;">
            <input type="submit" name="submit" id="submit" value="Submit" class="btn btn-primary" />
            @if (User.Identity.IsAuthenticated)
            {
                <a href="~/Candidate/Reg" class="btn btn-info text-white">Reset</a>
            }
        </div>
    </div>

</div>
